<?xml version="1.0" encoding="UTF-8"?>
<properties>
    <entry key="sql_">
    </entry>

   
    <entry key="sql_saleproduct_list">
 			SELECT * from sc_real_product where 1=1
 			{@ and type='#type#'}
 			{@ and status='#status#'}
 			{@ and name like '%#name#%'}
 			{@ and real_sku='#sku#'}
   </entry>
   
   <entry key="sql_saleproduct_insert">
 		INSERT INTO sc_real_product 
		(REAL_SKU, 
		IMAGE_URL,
		CREATOR, 
		CREATE_TIME, 
		NAME, 
		MEMO, 
		URL,
		PACKAGE_TYPE,
		WEIGHT,
		WEIGHT_UNIT,
		LENGTH,
		WIDTH,
		HEIGHT,
		TYPE,
		STATUS
		)
		VALUES
		('{@#sku#}', 
		'{@#imageUrl#}', 
		'{@#loginId#}', 
		NOW(), 
		'{@#name#}', 
		'{@#memo#}', 
		'{@#url#}',
		'{@#packageType#}',
		'{@#weight#}',
		'{@#weightUnit#}',
		'{@length#}',
		'{@#width#}',
		'{@#height#}',
		'{@#type#}',
		1
		)
   </entry>
   
    <entry key="sql_saleproduct_getMaxSKU">
    	SELECT ( CASE WHEN MAX(real_sku) IS NULL THEN 10000000 ELSE ( MAX(real_sku)+1) END ) AS C 
		FROM sc_real_product
    </entry>
   
   <entry key="sql_saleproduct_update">
 		
UPDATE sc_real_product 
	SET 
	{@ IMAGE_URL = '#imageUrl#',}
	NAME = '{@#name#}' , 
	MEMO = '{@#memo#}' , 
	URL = '{@#url#}',
	PACKAGE_TYPE = '{@#packageType#}',
	WEIGHT = '{@#weight#}',
	WEIGHT_UNIT = '{@#weightUnit#}',
	LENGTH = '{@#length#}',
	WIDTH = '{@#width#}',
	HEIGHT = '{@#height#}',
	REAL_SKU = '{@#sku#}'
	WHERE
	 ID = '{@#id#}';
		)
   </entry>
   
   <entry key="sql_saleproduct_selelctsku_list">
   	 SELECT * FROM (	
		SELECT  sc_amazon_account_product.*,
		sc_real_product_rel.sku AS REL_SKU,
		sc_real_product_rel.real_sku AS REL_REAL_SKU,
		sc_real_product_rel.account_id as REL_ACCOUNT_ID
		 FROM sc_real_product_rel
		 LEFT JOIN sc_amazon_account_product 
		 ON sc_real_product_rel.sku = sc_amazon_account_product.sku
					WHERE  sc_real_product_rel.real_id = '{@#id#}'
					{@ AND sc_real_product_rel.account_id = '#accountId#' }
					and sc_real_product_rel.sku is not null
					and sc_real_product_rel.sku != ''
					
		) t  order by t.ASIN
   </entry>
   
    <entry key="sql_saleproduct_selelctproduct_list">
    <![CDATA[
    select * from (	
		SELECT  sc_amazon_account_product.*,
		 (select count(1) from sc_real_product_rel where real_sku = '{@#realSku#}' and
		 	sc_real_product_rel.sku = sc_amazon_account_product.sku
		 	and sc_real_product_rel.account_id = sc_amazon_account_product.account_id
		 ) as checked
		 FROM sc_amazon_account_product 
					where status = 'Y'
					{@ and title like '%#title#%' }
					{@ and asin = '#asin#' }
					{@ and sku = '#sku#' }
					{@ and account_id = '#accountId#' }
					
					{@ and sku not in (
								select sku from sc_amazon_product_category_rel where sku is not null and account_id = '#accountId#')
						and 1= #uncategory#
					}
					{@ and sku in (
								select sku from sc_amazon_product_category_rel where category_id = '#categoryId#'
								and sku is not null and account_id = '#accountId#'
					)}
					and sku not in (
						select sku from sc_real_product_rel where real_id != '{@#id#}'
					)
		) t order by t.checked desc
	]]>	      
    </entry>
    
    <entry key="sql_saleproduct_channel_list">
    <![CDATA[
    SELECT * FROM (	
		SELECT  sc_amazon_account_product.*,
		sc_real_product_rel.sku AS REL_SKU,
		(SELECT NAME FROM sc_amazon_account WHERE id = sc_real_product_rel.account_id ) AS CHANNEL_NAME
		 FROM sc_real_product_rel
		 LEFT JOIN sc_amazon_account_product 
		 ON sc_real_product_rel.sku = sc_amazon_account_product.sku
					WHERE  sc_real_product_rel.real_id = '{@#id#}'
					{@ AND sc_amazon_account_product.title LIKE '%#title#%' }
					{@ AND sc_amazon_account_product.asin = '#asin#' }
					{@ AND sc_amazon_account_product.sku = '#sku#' }
					{@ AND sc_real_product_rel.account_id = '#accountId#' }
					
					{@ AND sc_amazon_account_product.sku NOT IN (
								SELECT sku FROM sc_amazon_product_category_rel WHERE sku IS NOT NULL AND account_id = '#accountId#')
						AND 1= #uncategory#
					}
					{@ AND sc_amazon_account_product.sku IN (
								SELECT sku FROM sc_amazon_product_category_rel WHERE category_id = '#categoryId#'
								AND sku IS NOT NULL AND account_id = '#accountId#'
					)}
					and sc_real_product_rel.sku is not null
					and sc_real_product_rel.sku != ''
					
		) t  order by t.CHANNEL_NAME , t.ASIN
	]]>	      
    </entry>
    
    <entry key="sql_saleproduct_select_list">
    <![CDATA[
    	SELECT * from sc_real_product 
    	where not exists (
    		select * from sc_real_product_composition s1 where s1.composition_sku = sc_real_product.real_sku
    	)
    	and type = 'base' and status = '1' 
	]]>	      
    </entry>
    
    <entry key="sql_saleproduct_composition_list">
    <![CDATA[
    SELECT s2.*,
    	s1.quantity as COM_QUANTITY,
    	COMPOSITION_ID, 
		COMPOSITION_SKU, 
		REF_ID, 
		REF_SKU
     FROM 
		sc_real_product_composition s1,sc_real_product s2
		WHERE s1.ref_sku = s2.real_sku
		and s1.composition_id = '{@#id#}'
	]]>	      
    </entry>
    
    <entry key="sql_saleproduct_composition_save">
    <![CDATA[
    INSERT INTO sc_real_product_composition 
		(
		COMPOSITION_ID,
		COMPOSITION_SKU, 
		REF_ID,
		REF_SKU, 
		QUANTITY, 
		MEMO, 
		CREATE_TIME, 
		CREATOR
		)
		VALUES
		(
			{@'#comId#'},
			{@'#comSku#'}, 
			{@'#refId#'}, 
			{@'#refSku#'}, 
			'{@#quantity#}', 
			'{@#memo#}', 
			NOW(), 
			'{@#loginId#}'
		)
	]]>	      
    </entry>
    
    <entry key="sql_saleproduct_supplier_save">
    <![CDATA[
   insert into sc_real_product_supplier 
		(REAL_SKU, 
		SUPPLIER_ID, 
		CREATE_TIME, 
		CREATOR
		)
		values
		('{@#realSku#}', 
		'{@#supplierId#}', 
		NOW(), 
		'{@#loginId#}'
		)
	]]>	      
    </entry>
    
    <entry key="sql_saleproduct_supplier_list">
    <![CDATA[
   SELECT * FROM sc_supplier WHERE id IN (
	SELECT supplier_id FROM sc_real_product_supplier s1 WHERE s1.REAL_SKU = '{@#realSku#}'
)
	]]>	      
    </entry>
    
</properties>