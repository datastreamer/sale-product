<?xml version="1.0" encoding="UTF-8"?>
<properties>
    <entry key="sql_">
    </entry>
    
    <!--
    	TODO:
    	outAemricanArea: 1
    	inAemricanArea : 0
    	
    	当空时设置：
    	itemContidtionNull:1
    	
    	fulfillmentChannelNull:1
    	
    	isPriceQuery:1
    	isQuantityQuery:1
    	
    	pm:other ==>0
    	
    	uncategory：1
    	
    	$VIEW_PP$ :数据权限
    -->
    <entry key="sql_purchase_new_productsForPrint">
		SELECT DISTINCT  
		    srp.REAL_SKU as SKU,
			sptp.* ,
			srp.name AS TITLE,
			srp.IMAGE_URL,
			(SELECT CODE FROM sc_supplier WHERE id = sptp.PROVIDOR ) AS PROVIDOR_CODE,
			(SELECT NAME FROM sc_supplier WHERE id = sptp.PROVIDOR ) AS PROVIDOR_NAME,
			(SELECT CONTACTOR FROM sc_supplier WHERE id = sptp.PROVIDOR ) AS PROVIDOR_CONTACTOR,
			(SELECT MOBILE FROM sc_supplier WHERE id = sptp.PROVIDOR ) AS PROVIDOR_PHONE,
			(SELECT NAME FROM sc_user WHERE login_id = sptp.executor ) AS EXECUTOR_NAME,
			sptp.PLAN_NUM AS SUPPIERABLE_NUM,
			(SELECT su.name FROM sc_purchase_plan_details_track sppdt , sc_user su
				 WHERE sppdt.PD_ID =sptp.ID AND sppdt.STATUS = 60
				 AND sppdt.creator = su.login_id
				  LIMIT 0,1  ) AS WARHOUSE_USERNAME
		FROM 
		sc_purchase_product sptp,
		sc_real_product srp
		WHERE 1=1 
			
		    and sptp.real_id = srp.id
		    and sptp.id = '{@#purchaseProductId#}'
   </entry>
    
    <entry key="sql_purchase_new_list">
    select * from (
			select spp.*,
				   srp.REAL_SKU,
				   srp.IMAGE_URL,
				   srp.name AS TITLE,
				   (SELECT spdt.MESSAGE FROM sc_purchase_plan_details_track spdt WHERE spdt.pd_id = spp.id
							ORDER BY spdt.create_time DESC LIMIT 0,1) AS TRACK_MEMO,
				   (SELECT NAME FROM sc_user WHERE login_id = spp.EXECUTOR  ) AS  EXECUTOR_NAME,
				   (SELECT NAME FROM sc_user WHERE login_id = spp.CREATED_BY  ) AS  CREATOR_NAME,
				   (SELECT NAME FROM sc_supplier WHERE id = spp.PROVIDOR ) AS PROVIDOR_NAME,
				   (SELECT spp1.REAL_QUOTE_PRICE FROM sc_purchase_product spp1 WHERE spp1.is_termination =0 AND spp1.status = 80
				   		and spp1.real_id = spp.real_id
				       ORDER BY spp1.last_updated_date DESC
				       LIMIT 0,1   
				   ) AS REAL_QUOTE_PRICE_,
				   (SELECT spp1.REAL_PROVIDOR FROM sc_purchase_product spp1 
				   				 WHERE spp1.is_termination =0 AND spp1.status = 80 
				       ORDER BY spp1.last_updated_date DESC
				       LIMIT 0,1   
				   ) AS REAL_PROVIDOR_,
				   (SELECT ss.NAME FROM sc_purchase_product spp1,sc_supplier ss
				   				 WHERE spp1.is_termination =0 AND spp1.status = 80 and spp1.REAL_PROVIDOR = ss.id
				   		and spp1.real_id = spp.real_id
				       ORDER BY spp1.last_updated_date DESC
				       LIMIT 0,1   
				   ) AS REAL_PROVIDOR_NAME_,
				   (SELECT spp1.QUALIFIED_PRODUCTS_NUM FROM sc_purchase_product spp1 WHERE spp1.is_termination =0 AND spp1.status = 80
				   		and spp1.real_id = spp.real_id
				       ORDER BY spp1.last_updated_date DESC
				       LIMIT 0,1   
				   ) AS QUALIFIED_PRODUCTS_NUM_,
				   (SELECT spp1.REAL_SHIP_FEE_TYPE FROM sc_purchase_product spp1 WHERE spp1.is_termination =0 AND spp1.status = 80
				   		and spp1.real_id = spp.real_id
				       ORDER BY spp1.last_updated_date DESC
				       LIMIT 0,1   
				   ) AS REAL_SHIP_FEE_TYPE_,
				   (SELECT spp1.REAL_SHIP_FEE FROM sc_purchase_product spp1 WHERE spp1.is_termination =0 AND spp1.status = 80
				   		and spp1.real_id = spp.real_id
				       ORDER BY spp1.last_updated_date DESC
				       LIMIT 0,1   
				   ) AS REAL_SHIP_FEE_,
				   (SELECT spp1.REAL_PURCHASE_DATE FROM sc_purchase_product spp1 WHERE spp1.is_termination =0 AND spp1.status = 80
				   		and spp1.real_id = spp.real_id
				       ORDER BY spp1.last_updated_date DESC
				       LIMIT 0,1   
				   ) AS REAL_PURCHASE_DATE_,
				   (SELECT SUM(sfsi.total_supply_quantity) FROM sc_fba_supply_inventory sfsi,
                                                  sc_supplychain_requirement_item ssri
                                                  WHERE sfsi.account_id = ssri.account_id
                                                  AND sfsi.seller_sku=ssri.listing_sku
                                                  AND ssri.req_product_id = spp.REQ_PRODUCT_ID
                                                  AND ssri.purchase_quantity >0				   
				   ) AS TOTAL_SUPPLY_QUANTITY
			 FROM 
			sc_purchase_product spp,
			sc_real_product srp
			WHERE spp.REAL_ID = srp.ID
			and spp.IS_TERMINATION = 0
			and ( spp.executor is not null and spp.executor !='' )
			and ( spp.status != 80 and spp.status != 25)
			and (spp.status > 45 or ( spp.limit_price is not null and spp.limit_price !=0 ))
			{@  and  EXISTS ( 
			        select * from sc_supplychain_requirement_item ssri
			        where ssri.req_product_id = spp.req_product_id
			        AND ssri.purchase_quantity >0	
			        and ssri.real_id = spp.real_id
			        and ssri.account_id = '#accountId#'
			) }
			{@ #$purchaseTask_view: and 1=0# }
			{@ and spp.id = '#id#'}
			{@ and spp.status in (#status#)}
		) t
		where 
		  1=1
		{@ and (
				t.title like '%#searchKey#%' or t.real_sku = '#searchKey#'
				or t.EXECUTOR_NAME like '%#searchKey#%'
				or t.TRACK_MEMO  like '%#searchKey#%'
				or t.CODE   like '%#searchKey#%'
			)}
   </entry>
   
   <entry key="sql_purchase_new_list_audit_count">
			SELECT count(1) as C
			 FROM 
			sc_purchase_product spp,
			sc_real_product srp
			WHERE spp.REAL_ID = srp.ID
			and spp.IS_TERMINATION = 0
			and spp.is_audit = 1
			{@ #$purchaseTask_view: and 1=0# }
   </entry>
   
   <entry key="sql_purchase_new_list_audit">
    select * from (
			SELECT spp.*,
			   srp.REAL_SKU,
			   srp.IMAGE_URL,
			   srp.name as TITLE,
			   (SELECT spdt.MESSAGE FROM sc_purchase_plan_details_track spdt WHERE spdt.pd_id = spp.id
						ORDER BY spdt.create_time DESC LIMIT 0,1) AS TRACK_MEMO,
			   (SELECT NAME FROM sc_user WHERE login_id = spp.EXECUTOR  ) AS  EXECUTOR_NAME,
			   (SELECT NAME FROM sc_user WHERE login_id = spp.CREATED_BY  ) AS  CREATOR_NAME
			 FROM 
			sc_purchase_product spp,
			sc_real_product srp
			WHERE spp.REAL_ID = srp.ID
			and spp.IS_TERMINATION = 0
			and spp.is_audit = 1
			{@ #$purchaseTask_view: and 1=0# }
			{@ and spp.id = '#id#'}
			{@ and spp.status = '#status#'}
			{@  and  EXISTS ( 
			        select * from sc_supplychain_requirement_item ssri
			        where ssri.req_product_id = spp.req_product_id
			        AND ssri.purchase_quantity >0	
			        and ssri.real_id = spp.real_id
			        and ssri.account_id = '#accountId#'
			) }
		) t
		where 
		  1=1
		{@ and (
				t.title like '%#searchKey#%' or t.real_sku = '#searchKey#'
				or t.EXECUTOR_NAME like '%#searchKey#%'
				or t.TRACK_MEMO  like '%#searchKey#%'
				or t.CODE   like '%#searchKey#%'
			)}
   </entry>
   
   <entry key="sql_purchase_new_getById">
			SELECT spp.*,
			   srp.REAL_SKU,
			   srp.IMAGE_URL,
			   srp.name as TITLE,
			   (SELECT NAME FROM sc_user WHERE login_id = spp.EXECUTOR  ) AS  EXECUTOR_NAME,
			   (SELECT NAME FROM sc_user WHERE login_id = spp.CREATED_BY  ) AS  CREATOR_NAME
			 FROM 
			sc_purchase_product spp,
			sc_real_product srp
			WHERE spp.REAL_ID = srp.ID
			{@ #$purchaseTask_view: and 1=0# }
			{@ and spp.id = '#id#'}
			{@ and spp.status = '#status#'}
   </entry>
   
   
   
   <entry key="sql_purchase_new_listForFinish">
        <![CDATA[	
       select * from (
			SELECT spp.*,
			   srp.REAL_SKU,
			   srp.IMAGE_URL,
			   srp.name as TITLE,
			   (SELECT spdt.MESSAGE FROM sc_purchase_plan_details_track spdt WHERE spdt.pd_id = spp.id
						ORDER BY spdt.create_time DESC LIMIT 0,1) AS TRACK_MEMO,
			   (SELECT NAME FROM sc_user WHERE login_id = spp.EXECUTOR  ) AS  EXECUTOR_NAME,
			   (SELECT NAME FROM sc_user WHERE login_id = spp.CREATED_BY  ) AS  CREATOR_NAME
			 FROM 
			sc_purchase_product spp,
			sc_real_product srp
			WHERE spp.REAL_ID = srp.ID
			  and ( spp.status = 80 or spp.status = 25)
			  {@ #$purchaseTask_view: and 1=0# }
			{@ and spp.id = '#id#'}
			{@ and spp.status = '#status#'}
			{@  and  EXISTS ( 
			        select * from sc_supplychain_requirement_item ssri
			        where ssri.req_product_id = spp.req_product_id
			        AND ssri.purchase_quantity >0	
			        and ssri.real_id = spp.real_id
			        and ssri.account_id = '#accountId#'
			) }
		) t
		where 
		  1=1
		{@ and (
				t.title like '%#searchKey#%' or t.real_sku = '#searchKey#'
				or t.EXECUTOR_NAME like '%#searchKey#%'
				or t.TRACK_MEMO  like '%#searchKey#%'
				
				or t.CODE   like '%#searchKey#%'
			)}
			]]>	
   </entry>
   
   <entry key="sql_purchase_new_listForRepaire">
        <![CDATA[	
       select * from (
			SELECT spp.*,
			   srp.REAL_SKU,
			   srp.IMAGE_URL,
			   srp.name as TITLE,
			   (SELECT spdt.MESSAGE FROM sc_purchase_plan_details_track spdt WHERE spdt.pd_id = spp.id
						ORDER BY spdt.create_time DESC LIMIT 0,1) AS TRACK_MEMO,
			   (SELECT NAME FROM sc_user WHERE login_id = spp.EXECUTOR  ) AS  EXECUTOR_NAME,
			   (SELECT NAME FROM sc_user WHERE login_id = spp.CREATED_BY  ) AS  CREATOR_NAME
			 FROM 
			sc_purchase_product spp,
			sc_real_product srp
			WHERE spp.REAL_ID = srp.ID
			and spp.IS_TERMINATION = 0
			 and ( spp.status <=45 and spp.status != 25 )
			  {@ and (   ( spp.executor is null or spp.executor ='' ) and #status1# = 1 )  }
			 {@ and   ( spp.limit_price is null or spp.limit_price <=0 ) and #status2# = 2 }
			and (
			  1=0
			 or   ( spp.executor is null or spp.executor ='' )  
			 or   (spp.limit_price is null or spp.limit_price <=0 )  
			)
			{@ and spp.id = '#id#'}
			{@ and spp.status = '#status#'}
	) t
		where 
		  1=1
		{@ and (
				t.title like '%#searchKey#%' or t.real_sku = '#searchKey#'
				or t.EXECUTOR_NAME like '%#searchKey#%'
				or t.TRACK_MEMO  like '%#searchKey#%'
				or t.CODE   like '%#searchKey#%'
			)}
			]]>	
   </entry>
   
   
   
   <entry key="sql_purchase_new_loadStatics">
			SELECT spp.STATUS,COUNT(spp.STATUS) AS COUNT FROM sc_purchase_product  spp
			where  
			 ( spp.executor is not null and spp.executor !='' )
			and ( spp.status != 80 and spp.status != 25)
			and spp.IS_TERMINATION = 0
			and (spp.status > 45 or ( spp.limit_price is not null and spp.limit_price !=0 ))
			     {@ #$purchaseTask_view: and 1=0# }
		    GROUP BY spp.STATUS
   </entry>
   
   <entry key="sql_purchase_new_loadRepaireStatics">
       <![CDATA[	
			SELECT '1' as STATUS , count(1) AS COUNT FROM sc_purchase_product  spp
			where (  spp.executor is null or spp.executor =''  )
			and spp.IS_TERMINATION = 0
			and ( spp.status <=45 and spp.status != 25 )
			union
			SELECT '2' as STATUS , count(1) AS COUNT FROM sc_purchase_product  spp
			where  ( spp.limit_price is null or spp.limit_price <=0 )
			and spp.IS_TERMINATION = 0
			and ( spp.status <=45 and spp.status != 25)
	]]>	   
   </entry>
    
   <entry key="sql_purchase_realproduct_select">
		SELECT * FROM sc_real_product where status = 1 and is_onsale = 1
		{@ and real_sku like '%#REAL_SKU#%' }
		{@ and name like '%#NAME#%' }
   </entry>
   
   <entry key="sql_purchase_new_product_updateStatus">
				UPDATE sc_purchase_product
					SET
					status = '{@#status#}'
					where
					id = '{@#productId#}' 
		</entry>
   
    <entry key="sql_purchase_new_create">
		INSERT INTO sc_purchase_product 
			(
			ID, 
			CODE,
			REAL_ID, 
			PLAN_NUM, 
			LIMIT_PRICE, 
			EXECUTOR, 
			START_TIME, 
			END_TIME, 
			REQ_PRODUCT_ID, 
			DEV_ID, 
			CREATED_BY, 
			CREATED_DATE, 
			LAST_UPDATED_BY, 
			LAST_UPDATED_DATE, 
			TAGS,
			STATUS
			)
			VALUES
			('{@#guid#}', 
			'{@#code#}', 
			'{@#realId#}', 
			'{@#planNum#}', 
			{@#limitPrice:NULL#}, 
			'{@#executor#}', 
			'{@#startTime#}', 
			'{@#endTime#}', 
			'{@#reqProductId#}', 
			'{@#devId#}',
			'{@#loginId#}', 
			NOW(), 
			'{@#loginId#}', 
			NOW(), 
			'{@#tags#}',
			51
			)
   </entry>
   <entry key="sql_purchase_new_update">
		   update sc_purchase_product 
			set
			{@plan_num = '#planNum#' , }
			{@limit_price = '#limitPrice#' , }
			{@executor = '#executor#' , }
			{@start_time = '#startTime#' ,}
			{@end_time = '#endTime#' ,}
			{@req_product_id = '#reqProductId#' ,}
			{@dev_id = '#devId#' ,}
			{@real_num = '#realNum#' ,}
			{@quote_price = '#quotePrice#' ,}
			{@real_quote_price = '#realQuotePrice#' ,}
			{@providor = '#providor#' ,}
			{@real_providor = '#realProvidor#' ,}
			{@area = '#area#' ,}
			{@real_purchase_date = '#realPurchaseDate#' ,}
			{@qualified_products_num = '#qualifiedProductsNum#' ,}
			{@bad_products_num = '#badProductsNum#' ,}
			{@out_Of_Num = '#outOfNum#' ,}
			{@no_Consistency_Num = '#noConsistencyNum#' ,}
			{@check_memo = '#checkMemo#' ,}
			{@warehouse_time = '#warehouseTime#' ,}
			{@warehouse_id = '#warehouseId#' ,}
			{@pay_type = '#payType#' ,}
			{@promise_delivery_date = '#promiseDeliveryDate#' ,}
			{@print_time = '#printTime#' ,}
			{@qtc = '#qtc#' ,}
			{@ship_fee_type = '#shipFeeType#' ,}
			{@real_ship_fee_type = '#realShipFeeType#' ,}
			{@ship_fee = '#shipFee#' ,}
			{@real_ship_fee = '#realShipFee#' ,}
			{@ship_fee_unit = '#shipFeeUnit#' ,}
			{@real_ship_unit = '#realShipUnit#' ,}
			{@last_updated_by = '#loginId#' ,}
			{@tags = '#tags#' ,}
			{@status = '#status#' ,}
			{@memo = '#memo#' ,}
			last_updated_date = NOW()
			where
			id = '{@#id#}'
	</entry>
	
	<entry key="sql_purchase_new_listing_label">
    	SELECT saap.*,
       			srp.NAME AS REAL_NAME,
       			srp.REAL_SKU,
       			srp.IMAGE_URL,
       			saa.NAME as ACCOUNT_NAME
		FROM 
			  sc_amazon_account_product saap,
			  sc_amazon_account saa,
			  sc_real_product_rel srpr ,
			  sc_real_product srp
		WHERE srpr.ACCOUNT_ID =saap.ACCOUNT_ID
			AND srpr.SKU = saap.SKU
			AND srpr.REAL_ID = srp.ID
			AND saap.STATUS = 'Y'
			AND saa.id = saap.account_id
			and saap.fulfillment_channel like '%AMAZON%'
    	{@ and saap.account_id = '#accountId#'}
    	{@ and (
    	    saap.title like '%#searchKey#%'  or
    	    srp.real_sku like '%#searchKey#%' or 
    	    srp.name like '%#searchKey#%' or
    	    saap.asin like '%#searchKey#%' or
    	    saap.sku like '%#searchKey#%'
    	)}
    </entry>
</properties>