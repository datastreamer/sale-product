<?xml version="1.0" encoding="UTF-8"?>
<properties>
	
	<entry key="sql_supplychain_requirement_plan_product_list">
	<![CDATA[	
		SELECT  srp.*,
	         		ssrpp.STATUS AS P_STATUS,
	         		ssrpp.REQ_PRODUCT_ID,
	         		ssrpp.CREATE_DATE,
	         		( SELECT sum(ssri.QUANTITY) 
	         		FROM  sc_supplychain_requirement_item ssri,
	         		    sc_real_product_rel srpr,
                                    sc_amazon_account_product saap
	         		    WHERE ssri.account_id = srpr.account_id
	         		    AND ssri.listing_sku = srpr.sku
	         		    AND srpr.real_id = srp.id
	         		    AND ssri.plan_id = ssrpp.plan_id
	         		    AND srpr.account_id =saap.account_id
	         		    AND srpr.sku =saap.sku
	         		) AS FIX_QUANTITY
		 FROM 
		     sc_supplychain_requirement_plan_product ssrpp,
			 sc_real_product srp
		WHERE   ssrpp.REAL_ID = srp.ID
		{@ 
		   and exists (
		      select  1 from sc_supplychain_requirement_item ssri 
		         where ssri.real_id = ssrpp.real_id and ssri.plan_id = ssrpp.plan_id
		         and ssri.account_id = '#accountId#'
		   )
		}
		{@ 
		 and exists (
		    select 1 from sc_supplychain_requirement_item ssri where ssri.real_id = ssrpp.real_id and ssri.plan_id = ssrpp.plan_id
		    and ssri.req_type = '#reqType#'
		 )
		}
		{@ 
		   and exists (
		      select  1 from sc_supplychain_requirement_item ssri 
		         where ssri.real_id = ssrpp.real_id and ssri.plan_id = ssrpp.plan_id
		         and ssri.fulfillment like '%#fulfillmentChannel#%'
		   )
		}
		{@
		  and ( srp.real_sku like '%#searchKey#%' or srp.name like '%#searchKey#%'  )
		}
		{@ and ssrpp.status = '#status#' }
		and ssrpp.status !=6
		and ssrpp.status !=2
		and srp.status = 1
	]]>
</entry>

	<entry key="sql_supplychain_requirement_plan_product_list_slow">
	 SELECT  srp.*,
	         ssrpp.STATUS as P_STATUS,
	         SUM(ssri.QUANTITY) AS FIX_QUANTITY
		 FROM 
		     sc_supplychain_requirement_plan_product ssrpp,
		     sc_supplychain_requirement_item ssri,
			 sc_real_product srp,
			 sc_real_product_rel srpr,
			 sc_amazon_account saa,
			 sc_amazon_account_product saap
		WHERE ssrpp.REAL_ID = srp.ID
		{@ and ssrpp.plan_id = '#planId#' }
		AND ssri.ACCOUNT_ID = srpr.ACCOUNT_ID
		AND saa.ID = ssri.account_id
		AND saap.account_id = ssri.account_id
		AND saap.sku = ssri.listing_sku
		AND ssri.LISTING_SKU = srpr.SKU
		AND srpr.REAL_ID = srp.ID
		{@ 
 			and srp.id  in (
 			  select product_id  from sc_real_product_category srpc where srpc.product_id = srp.id
 			  and srpc.category_id = '#categoryId#'
 			)
 			}
 			{@ and  srp.id not in (
							select product_id  from sc_real_product_category srpc where srpc.product_id = srp.id
						and 1= #uncategory#
			)
			}
		GROUP BY srp.ID

    </entry>
    
    <entry key="sql_supplychain_requirement_plan_product_details_list">
    	  SELECT ssri.*,
    	      saap.ASIN,
    	      saap.IS_RISK,
    	       saap.RISK_TYPE,
	    	  saa.name as ACCOUNT_NAME,
	    	  saap.id as ACCOUNT_PRODUCT_ID,
	    	  saap.IS_ANALYSIS,
	    	  saap.FULFILLMENT_CHANNEL,
	    	  (select name from sc_warehouse sw where sw.id = saa.fbm_warehouse) as FBM_WAREHOUSE_NAME,
	    	  srp.IMAGE_URL,
	    	  ( select count(1) from sc_supplychain_reqitem_in where req_item_id =ssri.id ) as IN_FLAG,
	    	  (select sfsi.TOTAL_SUPPLY_QUANTITY from sc_fba_supply_inventory sfsi where sfsi.account_id = saap.account_id and 
	    	     sfsi.seller_sku = saap.sku
	    	  ) as REALTIME_QUANTITY
		 FROM 
		     sc_supplychain_requirement_item ssri,
		     sc_supplychain_requirement_plan_product ssrpp,
			 sc_real_product srp,
			 sc_amazon_account saa,
			 sc_amazon_account_product saap
		WHERE 
			ssri.real_id = srp.id
			and saap.account_id = ssri.account_id
			and saap.sku = ssri.listing_sku
			and saa.id = ssri.account_id
			and srp.id =  '{@#realId#}'
			and ssrpp.req_product_id = '{@#reqProductId#}'
			and ssri.req_product_id = ssrpp.req_product_id
    </entry>
    
    <!-- 
   			 
    	  SELECT ssri.*,
    	      saap.ASIN,
    	      saap.IS_RISK,
    	       saap.RISK_TYPE,
	    	  saa.name as ACCOUNT_NAME,
	    	  saap.id as ACCOUNT_PRODUCT_ID,
	    	  saap.IS_ANALYSIS,
	    	  saap.FULFILLMENT_CHANNEL,
	    	  (select name from sc_warehouse sw where sw.id = saa.fbm_warehouse) as FBM_WAREHOUSE_NAME,
	    	  srp.IMAGE_URL,
	    	  ( select count(1) from sc_supplychain_reqitem_in where req_item_id =ssri.id ) as IN_FLAG
		 FROM 
		     sc_supplychain_requirement_item ssri,
		     sc_supplychain_requirement_plan_product ssrpp,
			 sc_real_product srp,
			 sc_amazon_account saa,
			 sc_amazon_account_product saap
		WHERE 
			ssri.real_id = srp.id
			and saap.account_id = ssri.account_id
			and saap.sku = ssri.listing_sku
			and saa.id = ssri.account_id
			and srp.id =  '{@#realId#}'
			and ssrpp.req_product_id = '{@#reqProductId#}'
			and ssri.plan_id = ssrpp.plan_id -->
    <entry key="sql_supplychain_requirement_plan_product_details_list_ALL">
         select 
             saap.SKU as LISTING_SKU,
              saap.ASIN,
    	      saap.RISK_TYPE,
    	      saap.FC_SKU,
	    	  saa.name as ACCOUNT_NAME,
	    	  saap.ACCOUNT_ID,
	    	  saap.id as ACCOUNT_PRODUCT_ID,
	    	  saap.IS_ANALYSIS,
	    	  saap.FULFILLMENT_CHANNEL,
	    	  (select name from sc_warehouse sw where sw.id = saa.fbm_warehouse) as FBM_WAREHOUSE_NAME,
	    	  srp.IMAGE_URL,
	    	  sfsi.TOTAL_SUPPLY_QUANTITY,
	    	  sar.SALES_FOR_THELAST14DAYS,
	    	  sar.SALES_FOR_THELAST30DAYS,
	    	  (select  ssri.QUANTITY from  sc_supplychain_requirement_item ssri,
		     						sc_supplychain_requirement_plan_product ssrpp
		     						where ssri.real_id = srp.id
		     						and saap.sku = ssri.listing_sku
									and saa.id = ssri.account_id
		     						and ssrpp.req_product_id = '{@#reqProductId#}'
		     						and ssri.plan_id = ssrpp.plan_id 
		     		 ) as QUANTITY,
	    	  (select  ssri.PURCHASE_QUANTITY from  sc_supplychain_requirement_item ssri,
		     						sc_supplychain_requirement_plan_product ssrpp
		     						where ssri.real_id = srp.id
		     						and saap.sku = ssri.listing_sku
									and saa.id = ssri.account_id
		     						and ssrpp.req_product_id = '{@#reqProductId#}'
		     						and ssri.plan_id = ssrpp.plan_id 
		     		 ) as PURCHASE_QUANTITY
          from 
             sc_real_product srp,
             sc_real_product_rel srpr , 
			 sc_amazon_account saa,
			 sc_amazon_account_product saap
			 left join sc_fba_supply_inventory sfsi
			 on sfsi.account_id  = saap.account_id
			 and sfsi.seller_sku = saap.sku
			 left join sc_amazon_recommendations sar
			 on sar.account_id = sfsi.account_id
			 and sar.sku = sfsi.seller_sku
	    where 
   			 srp.id =  '{@#realId#}'
   			 and srpr.real_id = srp.id
   			 and srpr.account_id = saap.account_id
   			 and srpr.sku = saap.sku
   			 and saa.id = saap.account_id
   			 
    </entry>

	<entry key="sql_supplychain_requirement_category">
    	  select sc_product_category.*,
        		sc_product_category.name as TEXT,
        		 {@  (  select count(1) from sc_real_product_category s 
        	  		where s.category_id = sc_product_category.id
        	  		and s.product_id = '#productId#'
					 ) as checkstate,
        	    }
              (select count(*) from sc_real_product_category where sc_real_product_category.category_id = sc_product_category.id
              and  sc_real_product_category.product_id in (
                   select s.real_id from sc_supplychain_requirement_plan_product s where s.plan_id = '{@#planId#}'
              )
               ) as TOTAL
              from sc_product_category
    </entry>
    
    <entry key="sql_supplychain_requirement_getFormatPlanItem2Product">
    	  SELECT * FROM sc_real_product srp WHERE srp.ID IN (
		   SELECT srpr.REAL_ID FROM sc_supplychain_requirement_item s1,
		   sc_real_product_rel srpr
		   WHERE srpr.SKU = s1.LISTING_SKU
		   AND srpr.ACCOUNT_ID = s1.ACCOUNT_ID
		   AND s1.plan_id = '{@#planId#}'
		   {@ and s1.account_id = '#accountId#'}
		)
    </entry>
    
    <!-- 获取仓库对应的需求列表 -->
    <entry key="sql_supplychain_requirement_listProductFBMByWarehouseId">
	  SELECT  srp.* ,
	      SUM(s1.QUANTITY) AS REQ_QUANTITY
	 FROM sc_real_product srp,
	      sc_supplychain_requirement_item s1,
	      sc_real_product_rel srpr,
	      sc_amazon_account saa,
		  sc_amazon_account_product saap
	  WHERE srpr.SKU = s1.LISTING_SKU
		AND srpr.ACCOUNT_ID = s1.ACCOUNT_ID
		AND s1.ACCOUNT_ID = saa.ID 
		and saap.FULFILLMENT_CHANNEL not like '%AMAZON%'
		AND saa.FBM_WAREHOUSE = '{@#warehouseId#}'
		AND srp.ID = srpr.REAL_ID
		and saap.account_id = s1.account_id
		and saap.sku = s1.listing_sku
		AND s1.ID not in (
		  select req_item_id from sc_supplychain_reqitem_in
		)
		GROUP BY srp.ID
	</entry>
	
	<entry key="sql_supplychain_requirement_listFBAItemByWarehouseId">
	 SELECT  s1.* ,
	    	  saa.name as ACCOUNT_NAME,
	    	  saap.FULFILLMENT_CHANNEL,
	    	  (select name from sc_supplychain_requirement_plan where id = s1.plan_id ) as REQ_NAME
	 FROM 
	      sc_supplychain_requirement_item s1,
	      sc_real_product_rel srpr,
	      sc_amazon_account saa,
		  sc_amazon_account_product saap
	  WHERE srpr.SKU = s1.LISTING_SKU
		AND srpr.ACCOUNT_ID = s1.ACCOUNT_ID
		AND s1.ACCOUNT_ID = saa.ID 
		AND saap.FULFILLMENT_CHANNEL like '%AMAZON%'
		AND srpr.sku = '{@#listingSku#}'
		and saap.account_id = s1.account_id
		and s1.account_id = '{@#accountId#}'
		and exists (
			select * from sc_supplychain_requirement_plan_product s2
			where s2.plan_id = s1.plan_id
					and s2.status != 0
					and s2.status !=2
		)
		and saap.sku = s1.listing_sku
		AND s1.ID not in (
		  select req_item_id from sc_supplychain_reqitem_in
		)
	</entry>
	
	<entry key="sql_supplychain_requirement_listFBMItemByWarehouseId">
	 SELECT  s1.* ,
	    	  saa.name as ACCOUNT_NAME,
	    	  saap.FULFILLMENT_CHANNEL,
	    	  (select name from sc_warehouse sw where sw.id = saa.fbm_warehouse) as FBM_WAREHOUSE_NAME,
	    	  (select name from sc_supplychain_requirement_plan where id = s1.plan_id ) as REQ_NAME
	 FROM 
	      sc_supplychain_requirement_item s1,
	      sc_real_product_rel srpr,
	      sc_amazon_account saa,
		  sc_amazon_account_product saap,
		  sc_warehouse sw
	  WHERE srpr.SKU = s1.LISTING_SKU
		AND srpr.ACCOUNT_ID = s1.ACCOUNT_ID
		AND s1.ACCOUNT_ID = saa.ID 
		AND saa.FBM_WAREHOUSE = '{@#warehouseId#}'
		and saa.FBM_WAREHOUSE= sw.id
		and saap.FULFILLMENT_CHANNEL not like '%AMAZON%'
		AND srpr.real_id = '{@#realId#}'
		and saap.account_id = s1.account_id
		and exists (
			select * from sc_supplychain_requirement_plan_product s2
			where s2.plan_id = s1.plan_id
					and s2.status != 0
					and s2.status !=2
		)
		and saap.sku = s1.listing_sku
		AND s1.ID not in (
		  select req_item_id from sc_supplychain_reqitem_in
		)
	</entry>
	
    <entry key="sql_supplychain_requirement_product_insert">
    	 INSERT INTO sc_supplychain_requirement_plan_product 
				(
				REQ_PRODUCT_ID,
				PLAN_ID, 
				REAL_ID, 
				CREATOR, 
				CREATE_DATE, 
				LAST_UPDATOR, 
				LAST_UPDATE_DATE, 
				STATUS
				)
				VALUES
				('{@#REQ_PRODUCT_ID#}', 
				'{@#PLAN_ID#}', 
				'{@#REAL_ID#}', 
				'{@#loginId#}', 
				NOW(), 
				'{@#loginId#}', 
				NOW(), 
				{@#status:0#}
				)
    </entry>

    <entry key="sql_supplychain_requirement_list">
    	SELECT ssrp.* ,
    	   (select name from sc_amazon_account where id = ssrp.account_id ) as ACCOUNT_NAME,
    	    ( select count(1) from  sc_supplychain_requirement_log ssrl where ssrl.req_plan_id = ssrp.id and type = 'C'  ) as STATUS_C,
    	    ( select count(1) from  sc_supplychain_requirement_log ssrl where ssrl.req_plan_id = ssrp.id and type = 'L'  ) as STATUS_L,
    		(SELECT COUNT(1) FROM sc_supplychain_requirement_plan_product s WHERE s.plan_id = ssrp.ID AND STATUS=6) AS STATUS6,
    		(SELECT COUNT(1) FROM sc_supplychain_requirement_plan_product s WHERE s.plan_id = ssrp.ID AND STATUS=5) AS STATUS5,
		   (SELECT COUNT(1) FROM sc_supplychain_requirement_plan_product s WHERE s.plan_id = ssrp.ID AND STATUS=4) AS STATUS4,
		   (SELECT COUNT(1) FROM sc_supplychain_requirement_plan_product s WHERE s.plan_id = ssrp.ID AND STATUS=3) AS STATUS3,
		   (SELECT COUNT(1) FROM sc_supplychain_requirement_plan_product s WHERE s.plan_id = ssrp.ID AND STATUS=2) AS STATUS2,
		   (SELECT COUNT(1) FROM sc_supplychain_requirement_plan_product s WHERE s.plan_id = ssrp.ID AND STATUS=1) AS STATUS1,
		   (SELECT COUNT(1) FROM sc_supplychain_requirement_plan_product s WHERE s.plan_id = ssrp.ID AND (STATUS=0 OR STATUS IS NULL OR STATUS='')) AS STATUS0
		  FROM sc_supplychain_requirement_plan ssrp
		  ORDER BY ssrp.create_date desc
    </entry>

    <entry key="sql_supplychain_requirement_list_count">
    	SELECT count(*)
		  FROM sc_supplychain_requirement_plan ssrp
    </entry>
    
    
     <!-- 获取能创建需求的Listing -->
     <entry key="sql_supplychain_requirement_cancreate_list_V1.2">
    	select 
    	        saap.*,
    	        saa.name as  ACCOUNT_ANME,
    	        saa.SUPPLY_CYCLE,
    	        saa.REQ_ADJUST,
    	        saa.CONVERSION_RATE,
    	        srp.ID as REAL_ID
    	from sc_amazon_account_product saap,
    		    sc_amazon_account saa,
    		    sc_real_product_rel srpr,
    		    sc_real_product srp
    	where saap.IS_ANALYSIS = 1
    			and saap.status = 'Y'
    			and saap.account_id=saa.id
    			and saa.status = 1
    			and srp.is_onsale = 1
    			and ( srp.REQ_AUDIT_NO_TIME is null  or DATEDIFF( NOW() , srp.REQ_AUDIT_NO_TIME ) >=3 )
    			and not exists (
	    	    	select 1 from sc_purchase_product spp
	    	               where spp.real_id = srpr.real_id
	    	                and spp.status !=80 
	    	                and spp.IS_TERMINATION = 0
	    	   )
	    	   and not exists (
		    	   SELECT * FROM sc_supplychain_requirement_plan_product ssrp
				   WHERE  ssrp.status not in (2,6)
				   				AND ssrp.REAL_ID = srp.ID
		    	)
		    	limit {@#start#},{@#limit#}
    </entry>
    
    

	 <!-- 获取能够创建需求计划的列表::: ANd sar.RECOMMENDED_INBOUND_QUANTITY >0
	 SELECT sar.*  as C FROM sc_amazon_recommendations sar,
    	sc_amazon_account_product saap
		WHERE NOT EXISTS(
		   SELECT * FROM sc_supplychain_requirement_plan ssrp,
		   sc_supplychain_requirement_item ssri
		   WHERE ssrp.ID = ssri.PLAN_ID
		   AND ssrp.status not in (2,6)
		   AND ssri.ACCOUNT_ID = sar.ACCOUNT_ID
		   AND ssri.LISTING_SKU = sar.SKU
		)
		and sar.ACCOUNT_ID = saap.ACCOUNT_ID
		and sar.SKU = sapp.SKU
		and saap.IS_ANALYSIS = 1
	 
	  -->
	  <!-- 
	  	存在货品中：上次审批不通过三天内
	  	不存在于需求计划中
	  	不存在于采购计划中
	   -->
     <entry key="sql_supplychain_requirement_cancreate_list">
    	select 
    	        saap.*,
    	        saa.name as  ACCOUNT_ANME,
    	        ( select real_id from sc_real_product_rel srpr where srpr.account_id = saap.account_id and srpr.sku = saap.sku  ) as REAL_ID
    	from sc_amazon_account_product saap,
    		    sc_amazon_account saa
    	where saap.IS_ANALYSIS = 1
    	and saap.status = 'Y'
    	and saap.account_id=saa.id
    	and  exists (
    	    select 1 from sc_real_product_rel srpr,
    	            sc_real_product srp
    	       where srpr.real_id = srp.id
    	            and srpr.account_id = saap.account_id and srpr.sku = saap.sku
    	            and srp.IS_ONSALE= 1
    	            and ( srp.REQ_AUDIT_NO_TIME is null  or DATEDIFF( NOW() , srp.REQ_AUDIT_NO_TIME ) >=3 )
    	)
    	and saa.status = 1
    	and not exists (
    	   select 1 from sc_purchase_product spp ,
    	                sc_real_product_rel srpr
    	               where spp.real_id = srpr.real_id
    	                and srpr.account_id = saap.account_id and srpr.sku = saap.sku
    	                and spp.status !=80 
    	                and spp.IS_TERMINATION = 0
    	)
    	and not exists (
    	   SELECT * FROM sc_supplychain_requirement_plan_product ssrp,
		   					sc_supplychain_requirement_item ssri
		   WHERE ssrp.REQ_PRODUCT_ID = ssri.REQ_PRODUCT_ID
		   AND ssrp.status not in (2,6)
		   AND ssri.ACCOUNT_ID = saap.ACCOUNT_ID
		   AND ssri.LISTING_SKU = saap.SKU
    	)
    	{@ and  saa.id = '#accountId#'}
    </entry>
    
     <entry key="sql_supplychain_requirement_plan_insert">
		    INSERT INTO sc_supplychain_requirement_plan 
			(ID, 
			NAME, 
			ACCOUNT_ID,
			CREATE_DATE, 
			STATUS
			)
			VALUES
			('{@#planId#}', 
			'{@#name#}', 
			'{@#accountId#}', 
			NOW(), 
			0
			)
	</entry>
	
	<entry key="sql_supplychain_requirement_item_insert">
			INSERT INTO sc_supplychain_requirement_item 
				(ACCOUNT_ID, 
				PLAN_ID, 
				LISTING_SKU, 
				REAL_ID,
				FULFILLMENT, 
				EXIST_QUANTITY,
				CALC_QUANTITY,
				QUANTITY, 
				PURCHASE_QUANTITY,
				ID, 
				CREATE_DATE,
				URGENCY,
				REQ_TYPE,
				REQ_PRODUCT_ID
				)
				VALUES
				('{@#accountId#}', 
				'{@#planId#}', 
				'{@#listingSku#}', 
				'{@#realId#}', 
				'{@#fulfillment#}', 
				'{@#existQuantity#}', 
				'{@#calcQuantity#}', 
				'{@#quantity#}', 
				'{@#quantity#}', 
				'{@#id#}', 
				NOW(), 
				'{@#urgency#}', 
				'{@#reqType#}', 
				'{@#reqProductId#}'
				)
		</entry>
		
		<entry key="sql_supplychain_requirement_item_formatRealSku">
		SELECT srp.ID,
		       ssri.PLAN_ID,
		       srp.REAL_SKU,
		       SUM(ssri.QUANTITY) AS QUANTITY
		 FROM sc_supplychain_requirement_item ssri,
		sc_real_product srp,
		sc_real_product_rel srpr
		WHERE 
		ssri.ACCOUNT_ID = srpr.ACCOUNT_ID
		AND ssri.LISTING_SKU = srpr.SKU
		AND srpr.REAL_ID = srp.ID
		AND ssri.PLAN_ID = '{@#planId#}'
		GROUP BY srp.ID,ssri.PLAN_ID,srp.REAL_SKU
	 </entry>
	 
	 <entry key="sql_supplychain_requirement_getListingCost">
	 			select * from 
	 			sc_view_listing_cost 
	 			where account_id= '{@#accountId#}'
	 			and LISTING_SKU= '{@#listingSku#}'
		</entry>
		
		<entry key="sql_supplychain_requirement_getListingCostNoView">
	 			select * from 
	 			sc_listing_cost 
	 			where account_id= '{@#accountId#}'
	 			and LISTING_SKU= '{@#listingSku#}'
		</entry>
		
		<entry key="sql_supplychain_requirement_getLastestSaleData">
		  <![CDATA[	
		SELECT DATE_FORMAT( soi.PURCHASE_DATE, "%Y-%m-%d" ) AS D,
			SUM(soi.quantity_ordered) AS C  
		 FROM sc_order_item soi
		WHERE   TO_DAYS(NOW()) -TO_DAYS(soi.PURCHASE_DATE) <= 14
		AND soi.account_id = '{@#accountId#}'
		AND soi.seller_sku =  '{@#listingSku#}'
		GROUP BY DATE_FORMAT( soi.purchase_date, "%Y-%m-%d" )
			]]>
		</entry>
		
		<!-- 最近几天销售数据 -->
		<entry key="sql_supplychain_requirement_getLastestSaleDataDays">
		  <![CDATA[	
		SELECT  SUM(soi.quantity_ordered) AS C  
		 FROM sc_order_item soi
		WHERE   TO_DAYS(NOW()) -TO_DAYS(soi.PURCHASE_DATE) <= {@#days#}
		AND soi.account_id = '{@#accountId#}'
		AND soi.seller_sku =  '{@#listingSku#}' 
			]]>
		</entry>
		
		<!-- AND sao.SKU =  '{@#listingSku#}' -->
		<entry key="sql_supplychain_requirement_getOrderOneWeek">
		  <![CDATA[	
		SELECT 
			SUM(sao.QUANTITY_SHIPPED+sao.QUANTITY_TO_SHIP) AS C  
		FROM sc_amazon_order sao 
			WHERE TO_DAYS(NOW()) -TO_DAYS(sao.PURCHASE_DATE) <= 7
			AND sao.ACCOUNT_ID =  '{@#accountId#}'
			]]>
		</entry>
		
		<!--  -->
		<entry key="sql_supplychain_requirement_getFlowOneWeek">
		  <![CDATA[	
		SELECT  COUNT(spfd.PAGEVIEWS) AS C  FROM  sc_product_flow_details spfd 
				WHERE TO_DAYS(NOW()) -TO_DAYS( spfd.creattime) <= 7
				AND spfd.SKU in  (
					select saap.sku from sc_amazon_account_product saap
					where saap.account_id  =  '{@#accountId#}'
				)
			]]>
		</entry>
		
		<entry key="sql_supplychain_requirement_getLastestFlowData">
		  <![CDATA[	
		SELECT DATE_FORMAT( spfd.creattime, "%Y-%m-%d" ) AS D,COUNT(1) AS C  FROM  sc_product_flow_details spfd 
				WHERE TO_DAYS(NOW()) -TO_DAYS( spfd.creattime) <= 14
				AND spfd.SKU = '{@#listingSku#}'
				GROUP BY DATE_FORMAT( spfd.creattime, "%Y-%m-%d" )
			]]>
	    </entry>
	    
	    
	    <entry key="sql_supplychain_req_log_list">
		  <![CDATA[	
	   		SELECT 
					ssrl.* ,
					saap.IS_ANALYSIS,
					saap.ID as ACCOUNT_PRODUCT_ID,
					saa.NAME AS ACCOUNT_NAME,
					saap.ASIN,
					srp.NAME,
					srp.REAL_SKU,
					saap.TITLE,
					srp.name as P_NAME,
					( SELECT spi.local_url FROM sc_product_imgs spi WHERE spi.asin = saap.asin LIMIT 0,1  ) AS LOCAL_URL,
					svlc.FULFILLMENT_CHANNEL,
				   (case when svlc.FULFILLMENT_CHANNEL='Merchant' then svlc.LOWEST_PRICE else svlc.LOWEST_FBA_PRICE end ) as LOWEST_PRICE,
				   svlc.TOTAL_COST
			FROM sc_supplychain_requirement_log ssrl 
			left join sc_amazon_account_product saap
			    on ssrl.SKU = saap.SKU
				   AND ssrl.ACCOUNT_ID = saap.ACCOUNT_ID
			left join sc_amazon_account saa
			   on saap.ACCOUNT_ID = saa.ID
			left join sc_real_product_rel srpr
			   on srpr.ACCOUNT_ID = saa.ID
			      AND srpr.SKU = saap.SKU
			left join sc_real_product srp
			  on srpr.REAL_ID = srp.ID 
			left join sc_listing_cost svlc
				on svlc.listing_sku = saap.sku
				   and svlc.account_id = saap.account_id
			WHERE  
			       ssrl.req_plan_id = '{@#reqPlanId#}'
			       {@ and ssrl.account_id = '#accountId#'}
			       {@ and ssrl.type = '#type#'}
			       order by svlc.LOWEST_PRICE,svlc.LOWEST_FBA_PRICE
			]]>
	    </entry>
	    
	    <entry key="sql_supplychain_req_log_list_count">
		  <![CDATA[	
	   		SELECT 
					count(*)
			FROM sc_supplychain_requirement_log ssrl 
			WHERE  
			       ssrl.req_plan_id = '{@#reqPlanId#}'
			       {@ and ssrl.account_id = '#accountId#'}
			       {@ and ssrl.type = '#type#'}
			]]>
	    </entry>
	    
	    <entry key="sql_supplychain_requirement_insertlog">
		  <![CDATA[	
	    INSERT INTO sc_supplychain_requirement_log 
				(REQ_PLAN_ID, 
				ACCOUNT_ID, 
				SKU, 
				REAL_ID,
				MEMO, 
				TYPE,
				CREATE_DATE
				)
				VALUES
				('{@#REQ_PLAN_ID#}', 
				'{@#ACCOUNT_ID#}', 
				'{@#SKU#}', 
				'{@#REAL_ID#}', 
				'{@#MEMO#}', 
				'{@#TYPE#}', 
				NOW()
				)
				]]>
	    </entry>
 </properties>