<?xml version="1.0" encoding="UTF-8"?>
<properties>
    <entry key="sql_">
    </entry>
    
    <!--
    	TODO:
    	outAemricanArea: 1
    	inAemricanArea : 0
    	
    	当空时设置：
    	itemContidtionNull:1
    	
    	fulfillmentChannelNull:1
    	
    	isPriceQuery:1
    	isQuantityQuery:1
    	
    	pm:other ==>0
    	
    	uncategory：1
    	
    	,
					(select label from sc_config where type='riskType' and sc_config.key=sc_amazon_account_product.RISK_TYPE limit 0,1) as RISK_LABEL,
					(select count(1) from sc_order_item soi where soi.account_id =sc_amazon_account_product.account_id and 
					         soi.SELLER_SKU =sc_amazon_account_product.sku  and 
					         TO_DAYS( NOW( ) ) - TO_DAYS(soi.purchase_date) <= 1
					          ) as C
    -->
    <entry key="sql_account_product_list">
    <![CDATA[	
		SELECT  sc_amazon_account_product.* ,
					(case when ( sc_amazon_account_product.title is  null  or sc_amazon_account_product.title = '') then sp.title else sc_amazon_account_product.title end ) as P_TITLE,
					(CASE WHEN ( sc_amazon_account_product.title IS  NULL  OR sc_amazon_account_product.title = '') 
					THEN (
					(SELECT spi.local_url FROM sc_product_imgs spi WHERE spi.asin = sp.ASIN LIMIT 0,1)
					) ELSE sc_amazon_account_product.LOCAL_URL END ) AS P_LOCAL_URL,
					srpr.REAL_ID,
					srpr.REAL_SKU
					FROM sc_amazon_account_product 
					LEFT JOIN sc_product sp
					ON sp.ASIN = sc_amazon_account_product.ASIN
					LEFT JOIN sc_real_product_rel srpr
					on srpr.sku = sc_amazon_account_product.sku
					where status = 'Y'
					{@ and sc_amazon_account_product.account_id = '#accountId#' }
					{@ and IS_FM = '#isFM#' }
					{@ and country >= '#outAemricanArea#' }
					{@ and country = '#inAemricanArea#' }
					{@ and 
					   (
					      sc_amazon_account_product.asin like '%#searchKey#%' 
					       or 
					       sc_amazon_account_product.sku like '%#searchKey#%' 
					       or 
					       sp.title  like '%#searchKey#%' 
					   )
					}
					{@ and ( fulfillment_channel is null or fulfillment_channel = '' ) and 1 = #fulfillmentChannelNull# }
					{@ and fulfillment_channel like '%#fulfillmentChannel#%' }
					
					{@ and sc_amazon_account_product.sku not in (
								select srpr.sku from sc_real_product_rel srpr ,
							    sc_real_product_category srpc
							    where srpr.real_id = srpc.product_id
							    and  srpr.account_id = '#accountId#'
								)
						and 1= #uncategory#
					}
					{@ and sc_amazon_account_product.sku in (
							   select srpr.sku from sc_real_product_rel srpr ,
							    sc_real_product_category srpc
							    where srpr.real_id = srpc.product_id
							    and srpc.category_id = '#categoryId#'
							    and  srpr.account_id = '#accountId#'
							    and srpr.sku = sc_amazon_account_product.sku
					)}
					{@ and 
					concat(srpr.account_id ,'$$', sc_amazon_account_product.sku ,'$$', sc_amazon_account_product.asin) 
					  in (
							select ste.entity_id  from sc_tag_entity ste where ste.entity_type like 'listingTag%'
						and ste.tag_id = '#tagId#'
					)}
		            order by sc_amazon_account_product.QUANTITY desc
	]]>	      
    </entry>
    
    <entry key="sql_account_product_list_noref_product">
    <![CDATA[	
		SELECT  sc_amazon_account_product.* ,
					(case when ( sc_amazon_account_product.title is  null  or sc_amazon_account_product.title = '') then sp.title else sc_amazon_account_product.title end ) as P_TITLE,
					(CASE WHEN ( sc_amazon_account_product.title IS  NULL  OR sc_amazon_account_product.title = '') 
					THEN (
					(SELECT spi.local_url FROM sc_product_imgs spi WHERE spi.asin = sp.ASIN LIMIT 0,1)
					) ELSE sc_amazon_account_product.LOCAL_URL END ) AS P_LOCAL_URL,
					srpr.REAL_ID,
					srpr.REAL_SKU
					FROM sc_amazon_account saa,
					sc_amazon_account_product 
					LEFT JOIN sc_product sp
					ON sp.ASIN = sc_amazon_account_product.ASIN
					LEFT JOIN sc_real_product_rel srpr
					on srpr.sku = sc_amazon_account_product.sku
					where sc_amazon_account_product.status = 'Y'
					and saa.id = sc_amazon_account_product.account_id
					and not exists (
					     select 1 from sc_real_product_rel srpr1,
					             sc_real_product srp
					      where srpr1.account_id = saa.id and srpr1.sku =sc_amazon_account_product.sku
					          and srp.id =srpr1.real_id
					          and srp.status = 1
					)
					and saa.status= 1
					{@ and sp.title like '%#title#%' }
					{@ and sc_amazon_account_product.asin = '#asin#' }
					{@ and sc_amazon_account_product.sku = '#sku#' }
					{@ and sc_amazon_account_product.quantity >= #quantity1# }
					{@ and sc_amazon_account_product.quantity <= #quantity2# }
					{@ and sc_amazon_account_product.price >= #price1# }
					{@ and sc_amazon_account_product.price <= #price2# }
					{@ and sc_amazon_account_product.account_id = '#accountId#' }
					{@ and IS_FM = '#isFM#' }
					{@ and country >= '#outAemricanArea#' }
					{@ and country = '#inAemricanArea#' }
					{@ and warning like '%#warning#%' }
					
					{@ and ( fulfillment_channel is null or fulfillment_channel = '' ) and 1 = #fulfillmentChannelNull# }
					{@ and fulfillment_channel like '%#fulfillmentChannel#%' }
					
					{@ and ( item_condition is null or item_condition = '' ) and 1 = #itemContidtionNull# }
					{@ and item_condition = '#itemCondition#' }
					
					{@ and ( feed_price <> '' and feed_price is not null ) and 1 = #isPriceQuery# }
					{@ and ( feed_quantity <> '' and feed_quantity is not null ) and 1 = #isQuantityQuery# }
					{@ and ( F_PM = '#pm#' or N_PM = '#pm#' or U_PM = '#pm#'  or FBA_PM = '#pm#' ) }
					
					{@ and sc_amazon_account_product.sku not in (
								select sku from sc_amazon_product_category_rel where sku is not null and account_id = '#accountId#')
						and 1= #uncategory#
					}
					{@ and sc_amazon_account_product.sku in (
								select sku from sc_amazon_product_category_rel where category_id = '#categoryId#'
								and sku is not null and account_id = '#accountId#'
					)}
					{@ and 
					concat(srpr.account_id ,'$$', sc_amazon_account_product.sku ,'$$', sc_amazon_account_product.asin) 
					  in (
							select ste.entity_id  from sc_tag_entity ste where ste.entity_type like 'listingTag%'
						and ste.tag_id = '#tagId#'
					)
	]]>	      
    </entry>
    
    <entry key="sql_account_product_cost_bad_statics">
    <![CDATA[	
    	SELECT  1 as STATUS,count(1) as COUNT
					FROM 
					sc_real_product srp 
					left join sc_product_cost spc
					on srp.id = spc.real_id
					WHERE 
					 srp.is_onsale=1 
					    and   ( 
					        spc.PURCHASE_COST is null or spc.PURCHASE_COST='' or spc.PURCHASE_COST = 0 
					   ) 
		union
		SELECT  3 as STATUS,count(1) as COUNT
					FROM 
					sc_real_product srp 
					left join sc_product_cost spc
					on srp.id = spc.real_id
					WHERE 
					 srp.is_onsale=1
					 and not exists (
					     select 1 from sc_product_cost_details spcd
					     where spcd.cost_id = spc.id
					   ) 
		union
		SELECT  4 as STATUS,count(1) as COUNT
		FROM 
					sc_real_product srp  
					WHERE 
					 srp.is_onsale=1
					  and (  srp.WEIGHT is null or srp.WEIGHT='' or srp.WEIGHT = 0)  
		union
		SELECT 6 as STATUS,count(1) as COUNT
					FROM 
					sc_real_product srp 
					left join sc_product_cost spc
					on srp.id = spc.real_id
					WHERE 
					 srp.is_onsale=1 
						and ( srp.declaration_Name is null or srp.declaration_Name =''
						       or 
						       srp.declaration_Price is null or srp.declaration_Price = ''
						  )
			union
		SELECT 7 as STATUS,count(1) as COUNT
		FROM 
					sc_real_product srp  
					WHERE 
					 srp.is_onsale=1
					  and (  srp.properties is null or srp.properties='' )  
		    union
		    SELECT 8 as STATUS,count(1) as COUNT
			FROM 
					sc_real_product srp  
		    where
		    srp.is_onsale=1
		     and exists (
						   select * from sc_amazon_account_product saap,
						             sc_real_product_rel srpr
						             where saap.account_id = srpr.account_id
						             and saap.sku = srpr.sku
						             and srpr.real_id = srp.id
						             and saap.fulfillment_channel like '%AMAZON%'
						             and ( saap.limit_price is null or saap.limit_price<=0)
						)
	]]>	      
    </entry>
    
    <!-- 成本数据不完整：
          1、关联到货品
          2、成本数据不完整
     -->
    <entry key="sql_account_product_list_cost_bad">
    <![CDATA[	
		SELECT  srp.*,
		             spc.PURCHASE_COST
					FROM 
					sc_real_product srp 
					left join sc_product_cost spc
					on srp.id = spc.real_id
					WHERE 
					 srp.is_onsale=1
					{@ and  #status1# = 1 
					    and   ( 
					        spc.PURCHASE_COST is null or spc.PURCHASE_COST='' or spc.PURCHASE_COST = 0 
					   ) }
					{@   and not exists (
					     select 1 from sc_product_cost_details spcd
					     where spcd.cost_id = spc.id
					   ) 
					   and #status3# = 1 }
					
					{@ and (  srp.WEIGHT is null or srp.WEIGHT='' or srp.WEIGHT = 0) and #status4# = 1}
					{@ and  #status5# = 1 
						and slc.total_price >0
						and slc.total_cost >0
						and (
					     	( slc.total_price - slc.total_cost ) >  slc.total_cost
					     	or
					     	slc.total_price - slc.total_cost < 0 
						)}
					{@ and  #status6# = 1 
						and ( srp.declaration_Name is null or srp.declaration_Name =''
						       or 
						       srp.declaration_Price is null or srp.declaration_Price = ''
						  ) }	
					{@ and  #status7# = 1 
						and ( srp.properties is null or srp.properties =''
						  ) }	
					{@ and  #status8# = 1 
						and  exists (
						   select * from sc_amazon_account_product saap,
						             sc_real_product_rel srpr
						             where saap.account_id = srpr.account_id
						             and saap.sku = srpr.sku
						             and srpr.real_id = srp.id
						             and saap.fulfillment_channel like '%AMAZON%'
						              and ( saap.limit_price is null or saap.limit_price<=0)
						) }	
					{@ and  (
					    srp.name like '%#searchKey#%'
					    or
					     srp.real_sku like '%#searchKey#%'
					)}
	]]>	      
    </entry>
    
    <entry key="sql_account_product_cost_bad_statics_v1">
    <![CDATA[	
		SELECT  1 as STATUS,count(1) as COUNT
					FROM sc_amazon_account saa,
					sc_amazon_account_product saap,
					sc_real_product srp,
					sc_real_product_rel srpr
					LEFT JOIN sc_listing_cost slc
					ON slc.account_id = srpr.account_id
					AND slc.listing_sku = srpr.sku
					WHERE 
					saap.status = 'Y'
					and saap.fulfillment_channel like '%AMAZON%'
					AND srp.id= srpr.REAL_ID
					AND saa.id = saap.account_id
					AND saap.account_id = srpr.account_id
					AND saap.sku = srpr.sku
					AND saa.status= 1
					and (  slc.P_PURCHASE_COST is null or slc.P_PURCHASE_COST='' or slc.P_PURCHASE_COST = 0) 
		union
		SELECT  2 as STATUS,count(1) as COUNT
					FROM sc_amazon_account saa,
					sc_amazon_account_product saap,
					sc_real_product srp,
					sc_real_product_rel srpr
					LEFT JOIN sc_listing_cost slc
					ON slc.account_id = srpr.account_id
					AND slc.listing_sku = srpr.sku
					WHERE 
					saap.status = 'Y'
					and saap.fulfillment_channel like '%AMAZON%'
					AND srp.id= srpr.REAL_ID
					AND saa.id = saap.account_id
					AND saap.account_id = srpr.account_id
					AND saap.sku = srpr.sku
					AND saa.status= 1
				and (  slc.total_price is null or slc.total_price='' or slc.total_price = 0) 
		union
		SELECT  3 as STATUS,count(1) as COUNT
					FROM sc_amazon_account saa,
					sc_amazon_account_product saap,
					sc_real_product srp,
					sc_real_product_rel srpr
					LEFT JOIN sc_listing_cost slc
					ON slc.account_id = srpr.account_id
					AND slc.listing_sku = srpr.sku
					WHERE 
					saap.status = 'Y'
					and saap.fulfillment_channel like '%AMAZON%'
					AND srp.id= srpr.REAL_ID
					AND saa.id = saap.account_id
					AND saap.account_id = srpr.account_id
					AND saap.sku = srpr.sku
					AND saa.status= 1
					and (  slc.fba_cost is null or slc.fba_cost='' or slc.fba_cost = 0) and slc.fulfillment_channel like '%AMAZON%' 
		union
		SELECT  4 as STATUS,count(1) as COUNT
					FROM sc_amazon_account saa,
					sc_amazon_account_product saap,
					sc_real_product srp,
					sc_real_product_rel srpr
					LEFT JOIN sc_listing_cost slc
					ON slc.account_id = srpr.account_id
					AND slc.listing_sku = srpr.sku
					WHERE 
					saap.status = 'Y'
					and saap.fulfillment_channel like '%AMAZON%'
					AND srp.id= srpr.REAL_ID
					AND saa.id = saap.account_id
					AND saap.account_id = srpr.account_id
					AND saap.sku = srpr.sku
					AND saa.status= 1
					and (  srp.WEIGHT is null or srp.WEIGHT='' or srp.WEIGHT = 0) 
		union
		SELECT  5 as STATUS,count(1) as COUNT
					FROM sc_amazon_account saa,
					sc_amazon_account_product saap,
					sc_real_product srp,
					sc_real_product_rel srpr
					LEFT JOIN sc_listing_cost slc
					ON slc.account_id = srpr.account_id
					AND slc.listing_sku = srpr.sku
					WHERE 
					saap.status = 'Y'
					and saap.fulfillment_channel like '%AMAZON%'
					AND srp.id= srpr.REAL_ID
					AND saa.id = saap.account_id
					AND saap.account_id = srpr.account_id
					AND saap.sku = srpr.sku
					AND saa.status= 1
					and slc.total_price >0
					and slc.total_cost >0
					and (
					     ( slc.total_price - slc.total_cost ) >  slc.total_cost
					     or
					     slc.total_price - slc.total_cost < 0 
					)
	]]>	      
    </entry>
    
    <entry key="sql_account_product_list_cost_bad_v1">
    <![CDATA[	
		SELECT  saap.* ,
					srp.NAME,
					saa.name as ACCOUNT_NAME,
					srp.IMAGE_URL,
					srpr.REAL_ID,
					srpr.REAL_SKU
					FROM sc_amazon_account saa,
					sc_amazon_account_product saap,
					sc_real_product srp,
					sc_real_product_rel srpr
					LEFT JOIN sc_listing_cost slc
					ON slc.account_id = srpr.account_id
					AND slc.listing_sku = srpr.sku
					WHERE 
					saap.status = 'Y'
					AND srp.is_onsale=1
					AND srp.id= srpr.REAL_ID
					AND saa.id = saap.account_id
					AND saap.account_id = srpr.account_id
					and saap.fulfillment_channel like '%AMAZON%'
					AND saap.sku = srpr.sku
					AND saa.status= 1
					{@ and (  slc.P_PURCHASE_COST is null or slc.P_PURCHASE_COST='' or slc.P_PURCHASE_COST = 0) and #status1# = 1}
					{@ and (  slc.total_price is null or slc.total_price='' or slc.total_price = 0) and #status2# = 1}
					{@ and (  slc.fba_cost is null or slc.fba_cost='' or slc.fba_cost = 0) and slc.fulfillment_channel like '%AMAZON%' and #status3# = 1}
					{@ and (  srp.WEIGHT is null or srp.WEIGHT='' or srp.WEIGHT = 0) and #status4# = 1}
					{@ and  #status5# = 1 
						and slc.total_price >0
						and slc.total_cost >0
						and (
					     	( slc.total_price - slc.total_cost ) >  slc.total_cost
					     	or
					     	slc.total_price - slc.total_cost < 0 
						)}
					{@ and  #status6# = 1 
						and ( srp.declaration_Name is null or srp.declaration_Name =''
						       or 
						       srp.declaration_Price is null or srp.declaration_Price = ''
						  ) }	
						
					{@ and  (
					    srp.name like '%#searchKey#%'
					    or
					     srp.real_sku like '%#searchKey#%'
					     or
					     saap.sku  like '%#searchKey#%'
					     or 
					     saap.title  like '%#searchKey#%'
					)}
	]]>	      
    </entry>
    
    <entry key="sql_account_product_list_nocalcreq">
    <![CDATA[	
		SELECT  sc_amazon_account_product.* ,
					srp.NAME as REAL_NAME,
					srp.IMAGE_URL,
					srpr.REAL_ID,
					srpr.REAL_SKU,
					saa.name as ACCOUNT_NAME,
					 (select sc.label from sc_config sc where sc.type = 'riskType' and sc.key = sc_amazon_account_product.risk_type) as RISK_LABEL
					FROM sc_amazon_account saa,
					sc_amazon_account_product 
					LEFT JOIN sc_real_product_rel srpr
					on srpr.sku = sc_amazon_account_product.sku
					left join sc_real_product srp
					on srp.id = srpr.real_id
					where sc_amazon_account_product.status = 'Y'
					and saa.id = sc_amazon_account_product.account_id
					and sc_amazon_account_product.IS_ANALYSIS = 0
					and saa.status= 1
					{@ and saa.id = '#accountId#'}
					{@ and sc_amazon_account_product.risk_type = '#riskType#'}
					{@ and (
					    srp.name like '%searchKey%' or srp.real_sku  like '%searchKey%' 
					    or sc_amazon_account_product.sku  like '%searchKey%' 
					)}
			]]>	      
    </entry>
    
    <entry key="sql_account_product_list_risk">
    <![CDATA[	
				SELECT  sc_amazon_account_product.* ,
							(case when ( sc_amazon_account_product.title is  null  or sc_amazon_account_product.title = '') then sp.title else sc_amazon_account_product.title end ) as P_TITLE,
							(CASE WHEN ( sc_amazon_account_product.title IS  NULL  OR sc_amazon_account_product.title = '') 
							THEN (
							(SELECT spi.local_url FROM sc_product_imgs spi WHERE spi.asin = sp.ASIN LIMIT 0,1)
							) ELSE sc_amazon_account_product.LOCAL_URL END ) AS P_LOCAL_URL,
							srpr.REAL_ID,
							srpr.REAL_SKU,
							(select label from sc_config where type='riskType' and sc_config.key=sc_amazon_account_product.RISK_TYPE limit 0,1) as RISK_TYPE_NAME
					FROM sc_amazon_account saa,
					sc_amazon_account_product 
					LEFT JOIN sc_product sp
					ON sp.ASIN = sc_amazon_account_product.ASIN
					LEFT JOIN sc_real_product_rel srpr
					on srpr.sku = sc_amazon_account_product.sku
					where sc_amazon_account_product.status = 'Y'
					and saa.id = sc_amazon_account_product.account_id
					and sc_amazon_account_product.IS_RISK = 1
					and saa.status= 1
					{@ and sp.title like '%#title#%' }
					{@ and sc_amazon_account_product.asin = '#asin#' }
					{@ and sc_amazon_account_product.sku = '#sku#' }
					{@ and sc_amazon_account_product.quantity >= #quantity1# }
					{@ and sc_amazon_account_product.quantity <= #quantity2# }
					{@ and sc_amazon_account_product.price >= #price1# }
					{@ and sc_amazon_account_product.price <= #price2# }
					{@ and sc_amazon_account_product.account_id = '#accountId#' }
					{@ and IS_FM = '#isFM#' }
					{@ and country >= '#outAemricanArea#' }
					{@ and country = '#inAemricanArea#' }
					{@ and warning like '%#warning#%' }
					
					{@ and ( fulfillment_channel is null or fulfillment_channel = '' ) and 1 = #fulfillmentChannelNull# }
					{@ and fulfillment_channel like '%#fulfillmentChannel#%' }
					
					{@ and ( item_condition is null or item_condition = '' ) and 1 = #itemContidtionNull# }
					{@ and item_condition = '#itemCondition#' }
					
					{@ and ( feed_price <> '' and feed_price is not null ) and 1 = #isPriceQuery# }
					{@ and ( feed_quantity <> '' and feed_quantity is not null ) and 1 = #isQuantityQuery# }
					{@ and ( F_PM = '#pm#' or N_PM = '#pm#' or U_PM = '#pm#'  or FBA_PM = '#pm#' ) }
					
					{@ and sc_amazon_account_product.sku not in (
								select sku from sc_amazon_product_category_rel where sku is not null and account_id = '#accountId#')
						and 1= #uncategory#
					}
					{@ and sc_amazon_account_product.sku in (
								select sku from sc_amazon_product_category_rel where category_id = '#categoryId#'
								and sku is not null and account_id = '#accountId#'
					)}
			]]>	      
    </entry>
    
    <entry key="sql_account_product_assign_category_list">
    <![CDATA[
    select t1.* from ( 	
		SELECT  sc_amazon_account_product.* ,
		( select count(1) from sc_amazon_product_category_rel
							where 1=1 {@ and category_id = '#categoryId#'} and sku = sc_amazon_account_product.sku ) as checked
		FROM sc_amazon_account_product 
					where status = 'Y'
					{@ and title like '%#title#%' }
					{@ and asin = '#asin#' }
					{@ and quantity >= #quantity1# }
					{@ and quantity <= #quantity2# }
					{@ and price >= #price1# }
					{@ and price <= #price2# }
					{@ and account_id = '#accountId#' }
					{@ and IS_FM = '#isFM#' }
					{@ and country >= '#outAemricanArea#' }
					{@ and country = '#inAemricanArea#' }
					
					{@ and ( fulfillment_channel is null or fulfillment_channel = '' ) and 1 = #fulfillmentChannelNull# }
					{@ and fulfillment_channel like '%#fulfillmentChannel#%' }
					
					{@ and ( item_condition is null or item_condition = '' ) and 1 = #itemContidtionNull# }
					{@ and item_condition = '#itemCondition#' }
					
					{@ and ( feed_price <> '' and feed_price is not null ) and 1 = #isPriceQuery# }
					{@ and ( feed_quantity <> '' and feed_quantity is not null ) and 1 = #isQuantityQuery# }
					{@ and ( F_PM = '#pm#' or N_PM = '#pm#' or U_PM = '#pm#'  or FBA_PM = '#pm#' ) }
					
					{@ and  not exists (
									select sku from sc_amazon_product_category_rel where  account_id = '#accountId#'
										and category_id <> '#categoryId#'
										and SKU IS NOT NULL and sc_amazon_account_product.sku = sku
						) }
					
		            order by cast(sc_amazon_account_product.DAY_PAGEVIEWS as signed) desc
		) t1 where 1=1
		{@ and t1.checked = #checked# }
	]]>	      
    </entry>
    
    <entry key="sql_account_product_double_list">
    <![CDATA[	
		select t1.* from (
		          select t.*
		          from (
		              SELECT  sc_amazon_account_product.*
						FROM sc_amazon_account_product
						where 1=1
						{@ and  sc_amazon_account_product.account_id = '#accountId#' }
						and exists (
							SELECT g1.ASIN FROM ( 
						        SELECT COUNT(sku) AS c,ASIN,fulfillment_channel FROM sc_amazon_account_product
						       WHERE {@ account_id = '#accountId#'} AND STATUS = 'Y' GROUP BY ASIN ,FULFILLMENT_CHANNEL 
						       ) g1 WHERE g1.c > 1  
						  AND g1.asin = sc_amazon_account_product.asin AND 
						 sc_amazon_account_product.fulfillment_channel = g1.fulfillment_channel
					)
		           ) t order by t.asin
			  ) t1
	]]>	      
    </entry>
    
    <entry key="sql_quantity_import_log">
    SELECT *,
				( select sc_user.name from sc_user where sc_user.login_id = sc_amazon_account_feed.creator ) as USERNAME
				FROM sc_amazon_account_feed where 1=1 {@ and account_id = '#accountId#'}
				and type = '_POST_INVENTORY_AVAILABILITY_DATA_'
   </entry>
   
   <entry key="sql_price_import_log">
    SELECT *,
				( select sc_user.name from sc_user where sc_user.login_id = sc_amazon_account_feed.creator ) as USERNAME
				FROM sc_amazon_account_feed where 1=1 {@ and account_id = '#accountId#'}
				and type = '_POST_PRODUCT_PRICING_DATA_'
   </entry>
   
   
</properties>