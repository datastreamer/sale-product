<?xml version="1.0" encoding="UTF-8"?>
<properties>
		<entry key="sql_getProductByAsin">
				select * from sc_product where asin = '{@#asin#}'
		</entry>
		
		<!-- 产品是否正在开发中 -->
		<entry key="sql_productIsDeving">
				select spd.*,
						(select spf.name from sc_product_filter spf where spf.id = spd.TASK_ID ) as TASK_NAME
						 from sc_product_dev spd
						where spd.flow_status not in ('15','80')
					AND ASIN =  '{@#asin#}'
		</entry>
		
		<entry key="sql_pdev_findByAsinAndTaskId">
				select 
					sc_product_dev.* ,
					(select name from sc_user where login_id =sc_product_dev.INQUIRY_CHARGER ) as INQUIRY_CHARGER_NAME
				
				from sc_product_dev where asin = '{@#ASIN#}' and task_id = '{@#TASK_ID#}'
		</entry>
		
		<entry key="sql_pdev_listTracks">
				select s.*,
				(select name from sc_user where login_id = s.creator ) as USERNAME
				 from sc_product_dev_track s		
				 where asin = '{@#asin#}'
				 and task_id = '{@#taskId#}'
				 order by create_time desc
		</entry>
		
		<entry key="sql_pdev_track_insert">
			INSERT INTO  sc_product_dev_track 
					(  
					ASIN, 
					TASK_ID,
					MEMO, 
					CREATOR, 
					CREATE_TIME
					)
					VALUES
					( 
					'{@#ASIN#}', 
					'{@#TASK_ID#}', 
					'{@#trackMemo#}', 
					'{@#loginId#}', 
					NOW()
					)
     </entry>

	   <entry key="sql_pdev_insert">
				INSERT INTO sc_product_dev 
					(ASIN, 
					TASK_ID,
					TITLE,
					CREATOR, 
					CREATE_TIME, 
					RANK, 
					ESTIMATE_TRAFFIC, 
					ESTIMATE_COST, 
					ESTIMATE_PROFIT, 
					HOT_SELL_PERIOD, 
					DEV_STATUS,
					FLOW_STATUS,
					PRODUCTS_SOLUTIONS,
					SUPPLIER_MAX_PRICE,
					SALE_LOWEST_PRICE,
					SALE_SUGGEST_PRICE,
					INQUIRY_CHARGER,
					TRY_PURCHASE_NUM
					)
					VALUES
					('{@#ASIN#}', 
					'{@#taskId#}', 
					'{@#TITLE#}', 
					'{@#loginId#}', 
					NOW(), 
					'{@#RANK#}', 
					'{@#ESTIMATE_TRAFFIC#}', 
					'{@#ESTIMATE_COST#}', 
					'{@#ESTIMATE_PROFIT#}', 
					'{@#HOT_SELL_PERIOD#}', 
					'{@#DEV_STATUS#}',
					'{@#FLOW_STATUS#}',
					'{@#PRODUCTS_SOLUTIONS#}',
					'{@#SUPPLIER_MAX_PRICE#}', 
					'{@#SALE_LOWEST_PRICE#}',
					'{@#SALE_SUGGEST_PRICE#}',
					'{@#INQUIRY_CHARGER#}',
					'{@#TRY_PURCHASE_NUM#}'
					)
     </entry>
     
     <entry key="sql_pdev_getLastestLimitPriceProduct">
		     SELECT s.* FROM sc_product_dev s WHERE s.real_product_id = '{@#id#}'
		 AND s.SALE_LOWEST_PRICE_FBA IS NOT NULL
		 ORDER BY  s.CREATE_TIME DESC
		LIMIT 0,1
     </entry>
     
      <entry key="sql_pdev_update">
UPDATE sc_product_dev 
	SET
			ASIN = '{@#ASIN#}' , 
			{@ REAL_PRODUCT_ID = '#REAL_PRODUCT_ID#',}
			{@ LISTING_SKU = '#LISTING_SKU#',}
			{@ PRODUCTS_SOLUTIONS = '#PRODUCTS_SOLUTIONS#',}
			{@ TITLE = '#TITLE#',}
			{@ SUPPLIER_MAX_PRICE = '#SUPPLIER_MAX_PRICE#',}
			{@ SALE_LOWEST_PRICE = '#SALE_LOWEST_PRICE#',}
			{@ SALE_SUGGEST_PRICE = '#SALE_SUGGEST_PRICE#',}
			{@ SALE_LOWEST_PRICE_FBA = '#SALE_LOWEST_PRICE_FBA#',}
			{@ SALE_SUGGEST_PRICE_FBA = '#SALE_SUGGEST_PRICE_FBA#',}
			{@ SALE_LOWEST_PRICE_FBM = '#SALE_LOWEST_PRICE_FBM#',}
			{@ SALE_SUGGEST_PRICE_FBM = '#SALE_SUGGEST_PRICE_FBM#',}
			{@ INQUIRY_CHARGER = '#INQUIRY_CHARGER#',}
			{@ TRY_PURCHASE_NUM = '#TRY_PURCHASE_NUM#',}
			END_TIME = NOW() , 
			RANK = '{@#RANK#}' , 
			{@FLOW_STATUS = '#FLOW_STATUS#',}
			ESTIMATE_TRAFFIC = '{@#ESTIMATE_TRAFFIC#}' , 
			ESTIMATE_COST = '{@#ESTIMATE_COST#}' , 
			ESTIMATE_PROFIT = '{@#ESTIMATE_PROFIT#}' , 
			HOT_SELL_PERIOD = '{@#HOT_SELL_PERIOD#}' , 
			{@ DEV_STATUS = '#DEV_STATUS#' , }
			FOLLOW_RISK_PRODUCT = '{@#FOLLOW_RISK_PRODUCT#}' , 
			FOLLOW_RISK_BRAND = '{@#FOLLOW_RISK_BRAND#}' , 
			FOLLOW_RISK_SUPPLIER = '{@#FOLLOW_RISK_SUPPLIER#}' , 
			PPC_STRATEGY = '{@#PPC_STRATEGY#}' , 
			LOGI_STRATEGY = '{@#LOGI_STRATEGY#}' , 
			PPC_STRATEGY_MEMO = '{@#PPC_STRATEGY_MEMO#}' , 
			LOGI_STRATEGY_MEMO = '{@#LOGI_STRATEGY_MEMO#}' , 
			SPREAD_STRATEGY = '{@#SPREAD_STRATEGY#}' , 
			EBAY_KEY = '{@#EBAY_KEY#}' , 
			EBAY_SALE_MEMO = '{@#EBAY_SALE_MEMO#}' , 
			CORE_KEY = '{@#CORE_KEY#}' , 
			CK_VALID_COMP = '{@#CK_VALID_COMP#}' , 
			CK_SR_SEARCH = '{@#CK_SR_SEARCH#}' , 
			CK_SR_COM = '{@#CK_SR_COM#}' , 
			CK_SR_CPC = '{@#CK_SR_CPC#}' , 
			OP_KEY1 = '{@#OP_KEY1#}' , 
			OK_VALID_COMP1 = '{@#OK_VALID_COMP1#}' , 
			OK_SR_SEARCH1 = '{@#OK_SR_SEARCH1#}' , 
			OK_SR_COM1 = '{@#OK_SR_COM1#}' , 
			OK_SR_CPC1 = '{@#OK_SR_CPC1#}' , 
			OP_KEY2 = '{@#OP_KEY2#}' , 
			OK_VALID_COMP2 = '{@#OK_VALID_COMP2#}' , 
			OK_SR_SEARCH2 = '{@#OK_SR_SEARCH2#}' , 
			OK_SR_COM2 = '{@#OK_SR_COM2#}' , 
			OK_SR_CPC2 = '{@#OK_SR_CPC2#}' , 
			OP_KEY3 = '{@#OP_KEY3#}' , 
			OK_VALID_COMP3 = '{@#OK_VALID_COMP3#}' , 
			OK_SR_SEARCH3 = '{@#OK_SR_SEARCH3#}' , 
			OK_SR_COM3 = '{@#OK_SR_COM3#}' , 
			OK_SR_CPC3 = '{@#OK_SR_CPC3#}' , 
			OP_KEY4 = '{@#OP_KEY4#}' , 
			OK_VALID_COMP4 = '{@#OK_VALID_COMP4#}' , 
			OK_SR_SEARCH4 = '{@#OK_SR_SEARCH4#}' , 
			OK_SR_COM4 = '{@#OK_SR_COM4#}' , 
			OK_SR_CPC4 = '{@#OK_SR_CPC4#}'
			WHERE
			ASIN = '{@#ASIN#}' AND
			TASK_ID = '{@#TASK_ID#}'
     </entry>

	<entry key="sql_pdev_task_insert">
			INSERT INTO sc_product_filter 
				(ID, 
				NAME, 
				CODE,
				CREATE_TIME, 
				CREATOR, 
				MEMO, 
				PLAN_ID,
				START_TIME,
				END_TIME,
				PLATFORM_ID
				)
				VALUES
				('{@#id#}', 
				'{@#name#}', 
				'{@#code#}', 
				NOW(), 
				'{@#loginId#}', 
				'{@#memo#}', 
				'{@#planId#}',
				'{@#startTime#}', 
				'{@#endTime#}', 
				'{@#platformId#}'
				)
     </entry>
     
     <entry key="sql_pdev_task_update">
		UPDATE sc_product_filter 
			SET
			NAME = '{@#name#}' , 
			MEMO = '{@#memo#}' , 
			CODE = '{@#code#}',
			PLATFORM_ID = '{@#platformId#}',
			START_TIME = '{@#startTime#}' , 
			END_TIME = '{@#endTime#}'
			WHERE
			ID = '{@#id#}'
     </entry>
	
		
	 <entry key="sql_pdev_plan_list">
			SELECT spdp.* ,
					( SELECT sc_user.name FROM sc_user WHERE sc_user.login_id = spdp.creator ) AS USERNAME ,
					(SELECT COUNT(*) FROM sc_product_dev scfd ,sc_product_filter spf WHERE scfd.task_id = spf.id and spf.plan_id = spdp.id ) AS TOTAL,
					(SELECT COUNT(*) FROM sc_product_dev scfd ,sc_product_filter spf WHERE scfd.task_id = spf.id and spf.plan_id = spdp.id  AND scfd.dev_status = 1 ) AS  STATUS1,
					(SELECT COUNT(*) FROM sc_product_dev scfd ,sc_product_filter spf WHERE scfd.task_id = spf.id and spf.plan_id = spdp.id  AND scfd.dev_status = 2 ) AS  STATUS2,
					(SELECT COUNT(*) FROM sc_product_dev scfd ,sc_product_filter spf WHERE scfd.task_id = spf.id and spf.plan_id = spdp.id  AND scfd.dev_status = 4 ) AS  STATUS4,
					(SELECT COUNT(*) FROM sc_product_dev scfd ,sc_product_filter spf WHERE scfd.task_id = spf.id and spf.plan_id = spdp.id  AND scfd.flow_status =10 ) AS STATUS10,
					(SELECT COUNT(*) FROM sc_product_dev scfd ,sc_product_filter spf WHERE scfd.task_id = spf.id and spf.plan_id = spdp.id  AND scfd.flow_status = 15 ) AS  STATUS15,
					(SELECT COUNT(*) FROM sc_product_dev scfd ,sc_product_filter spf WHERE scfd.task_id = spf.id and spf.plan_id = spdp.id  AND scfd.flow_status = 20) AS  STATUS20,
					(SELECT COUNT(*) FROM sc_product_dev scfd ,sc_product_filter spf
						WHERE scfd.task_id = spf.id 
						     AND spf.plan_id = spdp.id  
						     AND scfd.flow_status = 20
						     AND scfd.asin not in (
						     	select asin from sc_product_category_rel spcr ,sc_product_category spc
						     	where spcr.category_id = spc.id
						     	and ( spc.purchase_charger is null or spc.purchase_charger = '' )
						     )
					) AS  STATUS20_UNASIGN,
					(SELECT COUNT(*) FROM sc_product_dev scfd ,sc_product_filter spf
							,sc_product_category_rel spcr ,sc_product_category spc
						WHERE scfd.task_id = spf.id 
						     AND spf.plan_id = spdp.id  
						     AND scfd.flow_status = 20
						     AND spcr.asin = scfd.asin
						     AND spcr.category_id = spc.id
                             AND spc.purchase_charger = '{@#Evn.loginId#}'
					) AS  STATUS20_MY,
					(SELECT COUNT(*) FROM sc_product_dev scfd ,sc_product_filter spf WHERE scfd.task_id = spf.id and spf.plan_id = spdp.id  AND scfd.flow_status = 30 ) AS  STATUS30,
					(SELECT COUNT(*) FROM sc_product_dev scfd ,sc_product_filter spf WHERE scfd.task_id = spf.id and spf.plan_id = spdp.id  AND scfd.flow_status = 40 ) AS  STATUS40,
					(SELECT COUNT(*) FROM sc_product_dev scfd ,sc_product_filter spf WHERE scfd.task_id = spf.id and spf.plan_id = spdp.id  AND scfd.flow_status = 50 ) AS  STATUS50,
					(SELECT COUNT(*) FROM sc_product_dev scfd ,sc_product_filter spf WHERE scfd.task_id = spf.id and spf.plan_id = spdp.id  AND scfd.flow_status = 60 ) AS  STATUS60,
					(SELECT COUNT(*) FROM sc_product_dev scfd ,sc_product_filter spf WHERE scfd.task_id = spf.id and spf.plan_id = spdp.id  AND scfd.flow_status = 70 ) AS  STATUS70,
					(SELECT COUNT(*) FROM sc_product_dev scfd ,sc_product_filter spf WHERE scfd.task_id = spf.id and spf.plan_id = spdp.id  AND scfd.flow_status = 72 ) AS  STATUS72,
					(SELECT COUNT(*) FROM sc_product_dev scfd ,sc_product_filter spf WHERE scfd.task_id = spf.id and spf.plan_id = spdp.id  AND scfd.flow_status = 74 ) AS  STATUS74,
					(SELECT COUNT(*) FROM sc_product_dev scfd ,sc_product_filter spf WHERE scfd.task_id = spf.id and spf.plan_id = spdp.id  AND scfd.flow_status = 76 ) AS  STATUS76,
					(SELECT COUNT(*) FROM sc_product_dev scfd ,sc_product_filter spf WHERE scfd.task_id = spf.id and spf.plan_id = spdp.id  AND scfd.flow_status = 78 ) AS  STATUS78,
					(SELECT COUNT(*) FROM sc_product_dev scfd ,sc_product_filter spf WHERE scfd.task_id = spf.id and spf.plan_id = spdp.id  AND scfd.flow_status = 80 ) AS  STATUS80
			  FROM sc_product_dev_plan spdp
			  where 1=1
			  ORDER BY spdp.create_time desc
     </entry>
     
     <entry key="sql_pdev_plan_listForLast10">
			SELECT spdp.* ,
					spdp.name as TEXT,
					( SELECT sc_user.name FROM sc_user WHERE sc_user.login_id = spdp.creator ) AS USERNAME 
			  FROM sc_product_dev_plan spdp
			  where 1=1
			  ORDER BY spdp.create_time desc
			  limit 0,10
     </entry>
     
     <entry key="sql_pdev_plan_insert">
			INSERT INTO sc_product_dev_plan 
				(
				NAME, 
				CODE,
				START_TIME,
				END_TIME,
				FOLLOW_TOTAL_NUM, 
				FOLLOW_PER_NUM, 
				FOLLOW_SALE_NUM, 
				SELF_TOTAL_NUM, 
				SELF_PER_NUM, 
				SELF_SALE_NUM, 
				MEMO, 
				CREATOR, 
				CREATE_TIME
				)
				VALUES
				(
				'{@#name#}', 
				'{@#code#}', 
				'{@#startTime#}', 
				'{@#endTime#}', 
				'{@#followTotalNum#}', 
				'{@#followPerNum#}', 
				'{@#followSaleNum#}', 
				'{@#selfTotalNum#}', 
				'{@#selfPerNum#}', 
				'{@#selfSaleNum#}', 
				'{@#memo#}', 
				'{@#loginId#}', 
				NOW()
				)
     </entry>
     
      <entry key="sql_pdev_plan_update">
	     UPDATE sc_product_dev_plan 
				SET
				NAME = '{@#name#}' , 
				CODE = '{@#code#}',
				START_TIME = '{@#startTime#}' , 
				END_TIME = '{@#endTime#}' , 
				FOLLOW_TOTAL_NUM = '{@#followTotalNum#}' , 
				FOLLOW_PER_NUM = '{@#followPerNum#}' , 
				FOLLOW_SALE_NUM = '{@#followSaleNum#}' , 
				SELF_TOTAL_NUM = '{@#selfTotalNum#}' , 
				SELF_PER_NUM = '{@#selfPerNum#}' , 
				SELF_SALE_NUM = '{@#selfSaleNum#}' , 
				MEMO = '{@#memo#}' 
				WHERE
				ID = '{@#id#}'
     </entry>
     
     <entry key="sql_pdev_plan_getById">
	     select * from sc_product_dev_plan 
				WHERE
				ID = '{@#id#}'
     </entry>
     
     <entry key="sql_pdev_task_getById">
	     select * from sc_product_filter
				WHERE
				ID = '{@#id#}'
     </entry>
   
   <entry key="sql_pdev_filter_forTransfer">
	SELECT sc_product_filter.* ,
			spdp.CODE as PLAN_CODE,
			spdp.NAME as PLAN_NAME,
			( SELECT sp.name FROM sc_platform sp WHERE sp.id = sc_product_filter.platform_id ) AS PLATFORM_NAME,
			(SELECT COUNT(*) FROM sc_product_dev	 scfd WHERE scfd.task_id = sc_product_filter.id  ) AS TOTAL,
			(SELECT COUNT(*) FROM sc_product_dev	 scfd WHERE scfd.task_id = sc_product_filter.id  AND scfd.dev_status =1 ) AS STATUS1,
			(SELECT COUNT(*) FROM sc_product_dev	 scfd WHERE scfd.task_id = sc_product_filter.id  AND scfd.dev_status = 2 ) AS  STATUS2,
			(SELECT COUNT(*) FROM sc_product_dev	 scfd WHERE scfd.task_id = sc_product_filter.id  AND scfd.dev_status = 4 ) AS  STATUS4,
			(SELECT COUNT(*) FROM sc_product_dev	 scfd WHERE scfd.task_id = sc_product_filter.id  AND scfd.flow_status =10 ) AS STATUS10,
			(SELECT COUNT(*) FROM sc_product_dev	 scfd WHERE scfd.task_id = sc_product_filter.id  AND scfd.flow_status = 15 ) AS  STATUS15,
			(SELECT COUNT(*) FROM sc_product_dev	 scfd WHERE scfd.task_id = sc_product_filter.id  AND scfd.flow_status = 20) AS  STATUS20,
			(SELECT COUNT(*) FROM sc_product_dev	 scfd WHERE scfd.task_id = sc_product_filter.id  AND scfd.flow_status = 25) AS  STATUS25,
			(SELECT COUNT(*) FROM sc_product_dev	 scfd WHERE scfd.task_id = sc_product_filter.id  AND scfd.flow_status = 30 ) AS  STATUS30,
			(SELECT COUNT(*) FROM sc_product_dev	 scfd WHERE scfd.task_id = sc_product_filter.id  AND scfd.flow_status = 40 ) AS  STATUS40,
			(SELECT COUNT(*) FROM sc_product_dev	 scfd WHERE scfd.task_id = sc_product_filter.id  AND scfd.flow_status = 50 ) AS  STATUS50,
			(SELECT COUNT(*) FROM sc_product_dev	 scfd WHERE scfd.task_id = sc_product_filter.id  AND scfd.flow_status = 60 ) AS  STATUS60,
			(SELECT COUNT(*) FROM sc_product_dev	 scfd WHERE scfd.task_id = sc_product_filter.id  AND scfd.flow_status = 70 ) AS  STATUS70,
			(SELECT COUNT(*) FROM sc_product_dev	 scfd WHERE scfd.task_id = sc_product_filter.id  AND scfd.flow_status = 80 ) AS  STATUS80,
			( SELECT sc_user.name FROM sc_user WHERE sc_user.login_id = sc_product_filter.creator ) AS USERNAME
	  FROM sc_product_filter  , sc_product_dev_plan spdp
	  where 1=1
	    and plan_id = spdp.id
	  	and plan_id is not null
	  	{@ and sc_product_filter.name = '#NAME#'}
	  	{@ and sc_product_filter.CODE = '#CODE#'}
	  	{@ and  ( sc_product_filter.name like '%#taskSearchkey#%'  or sc_product_filter.CODE like '%#taskSearchkey#%' ) }
	  	{@ and spdp.CODE = '#PLAN_CODE#'}
	  	{@ and spdp.NAME = '#PLAN_NAME#'}
	  	{@ and spdp.id = '#planId#'}
	  ORDER BY sc_product_filter.create_time desc
   </entry>
   
      <entry key="sql_pdev_filter">
	SELECT sc_product_filter.* ,
			spdp.CODE as PLAN_CODE,
			spdp.NAME as PLAN_NAME,
			( SELECT sp.name FROM sc_platform sp WHERE sp.id = sc_product_filter.platform_id ) AS PLATFORM_NAME,
			(SELECT COUNT(*) FROM sc_product_dev	 scfd WHERE scfd.task_id = sc_product_filter.id  ) AS TOTAL,
			(SELECT COUNT(*) FROM sc_product_dev	 scfd WHERE scfd.task_id = sc_product_filter.id  AND scfd.dev_status =1 ) AS STATUS1,
			(SELECT COUNT(*) FROM sc_product_dev	 scfd WHERE scfd.task_id = sc_product_filter.id  AND scfd.dev_status = 2 ) AS  STATUS2,
			(SELECT COUNT(*) FROM sc_product_dev	 scfd WHERE scfd.task_id = sc_product_filter.id  AND scfd.dev_status = 4 ) AS  STATUS4,
			(SELECT COUNT(*) FROM sc_product_dev	 scfd WHERE scfd.task_id = sc_product_filter.id  AND scfd.flow_status =10 ) AS STATUS10,
			(SELECT COUNT(*) FROM sc_product_dev	 scfd WHERE scfd.task_id = sc_product_filter.id  AND scfd.flow_status = 15 ) AS  STATUS15,
			(SELECT COUNT(*) FROM sc_product_dev	 scfd WHERE scfd.task_id = sc_product_filter.id  AND scfd.flow_status = 20) AS  STATUS20,
			(SELECT COUNT(*) FROM sc_product_dev 	scfd
						WHERE   scfd.flow_status = 20
							and scfd.task_id = sc_product_filter.id
                             AND  scfd.INQUIRY_CHARGER = '{@#Evn.loginId#}'
					) AS  STATUS20_MY,
			(SELECT COUNT(*) FROM sc_product_dev scfd
						WHERE scfd.task_id = sc_product_filter.id 
						     AND scfd.flow_status = 20
						     AND ( scfd.INQUIRY_CHARGER = '' or scfd.INQUIRY_CHARGER is null )
					) AS  STATUS20_UNASIGN,
			(SELECT COUNT(*) FROM sc_product_dev	 scfd WHERE scfd.task_id = sc_product_filter.id  AND scfd.flow_status = 25) AS  STATUS25,
			(SELECT COUNT(*) FROM sc_product_dev	 scfd WHERE scfd.task_id = sc_product_filter.id  AND scfd.flow_status = 30 ) AS  STATUS30,
			(SELECT COUNT(*) FROM sc_product_dev	 scfd WHERE scfd.task_id = sc_product_filter.id  AND scfd.flow_status = 40 ) AS  STATUS40,
			(SELECT COUNT(*) FROM sc_product_dev	 scfd WHERE scfd.task_id = sc_product_filter.id  AND scfd.flow_status = 50 ) AS  STATUS50,
			(SELECT COUNT(*) FROM sc_product_dev	 scfd WHERE scfd.task_id = sc_product_filter.id  AND scfd.flow_status = 60 ) AS  STATUS60,
			(SELECT COUNT(*) FROM sc_product_dev	 scfd WHERE scfd.task_id = sc_product_filter.id  AND scfd.flow_status = 70 ) AS  STATUS70,
			(SELECT COUNT(*) FROM sc_product_dev	 scfd WHERE scfd.task_id = sc_product_filter.id  AND scfd.flow_status = 72 ) AS  STATUS72,
			(SELECT COUNT(*) FROM sc_product_dev	 scfd WHERE scfd.task_id = sc_product_filter.id  AND scfd.flow_status = 74 ) AS  STATUS74,
			(SELECT COUNT(*) FROM sc_product_dev	 scfd WHERE scfd.task_id = sc_product_filter.id  AND scfd.flow_status = 76 ) AS  STATUS76,
			(SELECT COUNT(*) FROM sc_product_dev	 scfd WHERE scfd.task_id = sc_product_filter.id  AND scfd.flow_status = 78 ) AS  STATUS78,
			(SELECT COUNT(*) FROM sc_product_dev	 scfd WHERE scfd.task_id = sc_product_filter.id  AND scfd.flow_status = 80 ) AS  STATUS80,
			( SELECT sc_user.name FROM sc_user WHERE sc_user.login_id = sc_product_filter.creator ) AS USERNAME
	  FROM sc_product_filter  , sc_product_dev_plan spdp
	  where 1=1
	    and plan_id = spdp.id
	  	and plan_id is not null
	  	{@ and  ( sc_product_filter.name like '%#taskSearchkey#%'  or sc_product_filter.CODE like '%#taskSearchkey#%' ) }
	  	{@ #$VIEW_PRODUCT_FILTER# }
	  ORDER BY sc_product_filter.create_time desc
   </entry>

<!-- ,
	( SELECT COUNT(1) FROM sc_product_cost spc 
			WHERE (spc.last_update_time IS NULL OR  spc.last_update_time > (DATE_SUB(CURDATE(), INTERVAL 1 MONTH))  )
			AND spc.asin = spfd.asin
			) AS COST_COUNT,
	( SELECT GROUP_CONCAT( CONCAT(spc.TYPE,'|',spc.PROFIT_MARGINS,'|',spc.PROFIT_NUM ) ) FROM sc_product_cost spc 
			WHERE (spc.last_update_time IS NULL OR  spc.last_update_time > (DATE_SUB(CURDATE(), INTERVAL 1 MONTH))  )
			AND spc.asin = spfd.asin
			) AS COST_GROUP -->
   <entry key="sql_pdev_filter_details_inquirylist">
SELECT sp.TITLE as P_TITLE, 
    spf.NAME  as FILTER_NAME,
    (select count(1) from sc_product_dev spd1 where spd1.asin = spfd.asin  ) as ASIN_COUNT,
    (SELECT spdt.MEMO FROM sc_product_dev_track spdt WHERE spdt.task_id = spfd.task_id AND spfd.asin = spdt.asin 
	ORDER BY spdt.create_time DESC LIMIT 0,1) AS MEMO,
	(SELECT spi.local_url FROM sc_product_imgs spi WHERE spi.asin = sp.asin LIMIT 0,1 ) AS LOCAL_URL , 
	spfd.*,
	( SELECT sc_user.name FROM sc_user WHERE sc_user.login_id = spfd.creator ) AS USERNAME,
	( SELECT sac.LABEL FROM sc_config sac WHERE  PPC_STRATEGY  = sac.ID ) AS PPC_STRATEGY_NAME,
	( SELECT count(1) FROM sc_purchase_supplier_inquiry spsi 
			WHERE  spsi.create_time > (DATE_SUB(CURDATE(), INTERVAL 12 MONTH)) 
			and spsi.asin = spfd.asin
			) as INQUIRY_COUNT,
	( SELECT COUNT(1) FROM sc_view_devproduct_cost spc 
			WHERE (spc.last_update_time IS NULL OR  spc.last_update_time > (DATE_SUB(CURDATE(), INTERVAL 1 MONTH))  )
			AND spc.asin = spfd.asin
			) AS COST_COUNT,
	( SELECT GROUP_CONCAT( CONCAT(spc.TYPE,'|',ROUND((spc.TOTAL_PRICE-spc.TOTAL_COST)/spc.TOTAL_COST ,4),'|',ROUND(spc.TOTAL_PRICE-spc.TOTAL_COST,2)) ) as COST_GROUP
	FROM sc_view_devproduct_cost spc 
			WHERE (spc.last_update_time IS NULL OR  spc.last_update_time > (DATE_SUB(CURDATE(), INTERVAL 1 MONTH))  )
			AND spc.asin = spfd.asin
			) AS COST_GROUP
FROM  sc_product_filter spf, 
			sc_product_dev spfd
	LEFT JOIN sc_product sp 
	on sp.asin = spfd.asin
	LEFT JOIN sc_sale_competition ssc  ON ssc.asin = sp.asin
	LEFT JOIN sc_sale_fba  ssf ON ssf.asin = sp.asin
	LEFT JOIN sc_sale_potential ssp  ON ssp.asin = sp.asin
        LEFT JOIN sc_product_flow_details spfd1  ON spfd1.asin = sp.asin
WHERE  spfd.task_id = spf.id
	 and spfd.flow_status = 20
	 and spfd.INQUIRY_CHARGER = '{@#Evn.loginId#}'
     {@  and sp.title like '%#title#%'}
     {@  and sp.asin = '#asin#'}
     {@  and spfd.flow_status in ( #status#) }
     {@  and spfd.dev_status in ( #devStatus#) }
     {@  and ( spfd.dev_status != 3 or spfd.dev_status is null or spfd.dev_status = '' ) and  #devStatus1# =  #devStatus1#  }
     {@  and spfd.task_id = '#taskId#' }
     {@  and spf.plan_id = '#planId#'}
     {@  and (spfd.asin like '%#searchKey#%' or sp.title like '%#searchKey#%'  or spfd.title like '%#searchKey#%')}
   </entry>
   
   <!-- 
   SELECT sp.TITLE as P_TITLE, 
    spf.NAME  as FILTER_NAME,
    (select count(1) from sc_product_dev spd1 where spd1.asin = spfd.asin  ) as ASIN_COUNT,
    (SELECT spdt.MEMO FROM sc_product_dev_track spdt WHERE spdt.task_id = spfd.task_id AND spfd.asin = spdt.asin 
	ORDER BY spdt.create_time DESC LIMIT 0,1) AS MEMO,
	(SELECT spi.local_url FROM sc_product_imgs spi WHERE spi.asin = sp.asin LIMIT 0,1 ) AS LOCAL_URL , 
	spfd.*,
	( SELECT sc_user.name FROM sc_user WHERE sc_user.login_id = spfd.creator ) AS USERNAME,
	( SELECT sac.LABEL FROM sc_config sac WHERE  PPC_STRATEGY  = sac.ID ) AS PPC_STRATEGY_NAME,
	( SELECT count(1) FROM sc_purchase_supplier_inquiry spsi 
			WHERE  spsi.create_time > (DATE_SUB(CURDATE(), INTERVAL 12 MONTH)) 
			and spsi.asin = spfd.asin
			) as INQUIRY_COUNT,
	( SELECT COUNT(1) FROM sc_view_devproduct_cost spc 
			WHERE (spc.last_update_time IS NULL OR  spc.last_update_time > (DATE_SUB(CURDATE(), INTERVAL 1 MONTH))  )
			AND spc.asin = spfd.asin
			) AS COST_COUNT,
	( SELECT GROUP_CONCAT( CONCAT(spc.TYPE,'|',ROUND((spc.TOTAL_PRICE-spc.TOTAL_COST)/spc.TOTAL_COST ,4),'|',ROUND(spc.TOTAL_PRICE-spc.TOTAL_COST,2)) ) as COST_GROUP
	FROM sc_view_devproduct_cost spc 
			WHERE (spc.last_update_time IS NULL OR  spc.last_update_time > (DATE_SUB(CURDATE(), INTERVAL 1 MONTH))  )
			AND spc.asin = spfd.asin
			) AS COST_GROUP
FROM  sc_product_filter spf, 
			sc_product_dev spfd
	LEFT JOIN sc_product sp 
	on sp.asin = spfd.asin
	LEFT JOIN sc_sale_competition ssc  ON ssc.asin = sp.asin
	LEFT JOIN sc_sale_fba  ssf ON ssf.asin = sp.asin
	LEFT JOIN sc_sale_potential ssp  ON ssp.asin = sp.asin
        LEFT JOIN sc_product_flow_details spfd1  ON spfd1.asin = sp.asin
WHERE  spfd.task_id = spf.id
	 and spfd.dev_status !='3'
     {@  and sp.title like '%#title#%'}
     {@  and sp.asin = '#asin#'}
     {@  and spfd.flow_status in ( #status#) }
     {@  and spfd.dev_status in ( #devStatus#) }
     {@  and ( spfd.dev_status != 3 or spfd.dev_status is null or spfd.dev_status = '' ) and  #devStatus1# =  #devStatus1#  }
     {@  and spfd.task_id = '#taskId#' }
     {@  and spf.plan_id = '#planId#'}
     {@  and (spfd.asin like '%#searchKey#%' or sp.title like '%#searchKey#%'  or spfd.title like '%#searchKey#%')}
     {@  and spfd.task_id in (
     			SELECT sc_product_filter.id
			  FROM sc_product_filter  , sc_product_dev_plan spdp
			  where 1=1
			    and plan_id = spdp.id
			  	and plan_id is not null
			  	 #$VIEW_PRODUCT_FILTER#
			  	and '#taskView#' = '#taskView#'
     	)
     }
      {@  and 	spfd.flow_status = '#mystatus#'
      	 	and  spfd.asin in (
      				select spcr.asin
      				from sc_product_category_rel spcr ,sc_product_category spc
						WHERE 
						     spcr.category_id = spc.id
                             AND spc.purchase_charger = '#Evn.loginId#'
     	)
     }
     {@  and 	spfd.flow_status = '#unasignstatus#'
      	 	and  spfd.asin not in (
      				select spcr.asin
      				from sc_product_category_rel spcr ,sc_product_category spc
						WHERE 
						     spcr.category_id = spc.id
                            and ( spc.purchase_charger is null or spc.purchase_charger = '' )
     	)
     }
     {@ and concat(spfd.task_id,'$$',spfd.asin)  in (
							select ste.entity_id  from sc_tag_entity ste where ste.entity_type = 'productDevTag'
						and ste.tag_id = '#tagId#'
			)
	  }
    -->
   <entry key="sql_pdev_filter_details">
SELECT sp.TITLE as P_TITLE, 
    spf.NAME  as FILTER_NAME,
    (select count(1) from sc_product_dev spd1 where spd1.asin = spfd.asin  ) as ASIN_COUNT,
    (SELECT spdt.MEMO FROM sc_product_dev_track spdt WHERE spdt.task_id = spfd.task_id AND spfd.asin = spdt.asin 
	ORDER BY spdt.create_time DESC LIMIT 0,1) AS MEMO,
	(SELECT spi.local_url FROM sc_product_imgs spi WHERE spi.asin = sp.asin LIMIT 0,1 ) AS LOCAL_URL , 
	spfd.*,
	( SELECT sc_user.name FROM sc_user WHERE sc_user.login_id = spfd.creator ) AS USERNAME,
	( SELECT sac.LABEL FROM sc_config sac WHERE  PPC_STRATEGY  = sac.ID ) AS PPC_STRATEGY_NAME,
	( SELECT count(1) FROM sc_purchase_supplier_inquiry spsi 
			WHERE  spsi.create_time > (DATE_SUB(CURDATE(), INTERVAL 12 MONTH)) 
			and spsi.asin = spfd.asin
			) as INQUIRY_COUNT
FROM  sc_product_filter spf, 
			sc_product_dev spfd
	LEFT JOIN sc_product sp 
	on sp.asin = spfd.asin
WHERE  spfd.task_id = spf.id
	 and spfd.dev_status !='3'
     {@  and sp.title like '%#title#%'}
     {@  and sp.asin = '#asin#'}
     {@  and spfd.flow_status in ( #status#) }
     {@  and spfd.dev_status in ( #devStatus#) }
     {@  and ( spfd.dev_status != 3 or spfd.dev_status is null or spfd.dev_status = '' ) and  #devStatus1# =  #devStatus1#  }
     {@  and spfd.task_id = '#taskId#' }
     {@  and spf.plan_id = '#planId#'}
     {@  and (spfd.asin like '%#searchKey#%' or sp.title like '%#searchKey#%'  or spfd.title like '%#searchKey#%')}
     {@  and spfd.task_id in (
     			SELECT sc_product_filter.id
			  FROM sc_product_filter  , sc_product_dev_plan spdp
			  where 1=1
			    and plan_id = spdp.id
			  	and plan_id is not null
			  	 #$VIEW_PRODUCT_FILTER#
			  	and '#taskView#' = '#taskView#'
     	)
     }
      {@  and 	spfd.flow_status = '#mystatus#'
      	 	and  spfd.asin in (
      				select spcr.asin
      				from sc_product_category_rel spcr ,sc_product_category spc
						WHERE 
						     spcr.category_id = spc.id
                             AND spc.purchase_charger = '#Evn.loginId#'
     	)
     }
     {@  and 	spfd.flow_status = '#unasignstatus#'
      	 	and  spfd.asin not in (
      				select spcr.asin
      				from sc_product_category_rel spcr ,sc_product_category spc
						WHERE 
						     spcr.category_id = spc.id
                            and ( spc.purchase_charger is null or spc.purchase_charger = '' )
     	)
     }
     {@ and concat(spfd.task_id,'$$',spfd.asin)  in (
							select ste.entity_id  from sc_tag_entity ste where ste.entity_type = 'productDevTag'
						and ste.tag_id = '#tagId#'
			)
	  }
   </entry>
   
   <entry key="sql_pdev_filter_details_getCostGroup">
SELECT    
   spfd.ASIN,
    spf.ID,
	( SELECT COUNT(1) FROM sc_view_devproduct_cost spc 
			WHERE (spc.last_update_time IS NULL OR  spc.last_update_time > (DATE_SUB(CURDATE(), INTERVAL 1 MONTH))  )
			AND spc.asin = spfd.asin
			) AS COST_COUNT,
	( SELECT GROUP_CONCAT( CONCAT(spc.TYPE,'|',ROUND((spc.TOTAL_PRICE-spc.TOTAL_COST)/spc.TOTAL_COST ,4),'|',ROUND(spc.TOTAL_PRICE-spc.TOTAL_COST,2)) ) as COST_GROUP
	FROM sc_view_devproduct_cost spc 
			WHERE (spc.last_update_time IS NULL OR  spc.last_update_time > (DATE_SUB(CURDATE(), INTERVAL 1 MONTH))  )
			AND spc.asin = spfd.asin
			) AS COST_GROUP
FROM  sc_product_filter spf, 
			sc_product_dev spfd
WHERE  spfd.ASIN in ( {@#asins|true#} )
   </entry>
   
   <entry key="sql_pdev_discard_list">
SELECT sp.TITLE as P_TITLE, 
    spf.NAME  as FILTER_NAME,
    (select count(1) from sc_product_dev spd1 where spd1.asin = spfd.asin  ) as ASIN_COUNT,
    (SELECT spdt.MEMO FROM sc_product_dev_track spdt WHERE spdt.task_id = spfd.task_id AND spfd.asin = spdt.asin 
	ORDER BY spdt.create_time DESC LIMIT 0,1) AS MEMO,
	(SELECT spi.local_url FROM sc_product_imgs spi WHERE spi.asin = sp.asin LIMIT 0,1 ) AS LOCAL_URL , 
	spfd.*,
	( SELECT sc_user.name FROM sc_user WHERE sc_user.login_id = spfd.creator ) AS USERNAME,
	( SELECT sac.LABEL FROM sc_config sac WHERE  PPC_STRATEGY  = sac.ID ) AS PPC_STRATEGY_NAME,
	( SELECT count(1) FROM sc_purchase_supplier_inquiry spsi 
			WHERE  spsi.create_time > (DATE_SUB(CURDATE(), INTERVAL 12 MONTH)) 
			and spsi.asin = spfd.asin
			) as INQUIRY_COUNT
FROM  sc_product_filter spf, 
			sc_product_dev spfd
	LEFT JOIN sc_product sp 
	on sp.asin = spfd.asin
	LEFT JOIN sc_sale_competition ssc  ON ssc.asin = sp.asin
	LEFT JOIN sc_sale_fba  ssf ON ssf.asin = sp.asin
	LEFT JOIN sc_sale_potential ssp  ON ssp.asin = sp.asin
        LEFT JOIN sc_product_flow_details spfd1  ON spfd1.asin = sp.asin
WHERE  spfd.task_id = spf.id
     and spfd.dev_status ='3'
     {@  and (spfd.asin like '%#searchKey#%' or sp.title like '%#searchKey#%'  or spfd.title like '%#searchKey#%')}
     order by end_time desc
   </entry>
   
   
    <entry key="sql_pdev_upload_list">
		select * from sc_upload
		where 1=1
		  {@ #$VIEW_PU# }
		order by id desc
    </entry>
    
    <entry key="sql_pdev_setSupplierFlag">
    UPDATE  sc_product_supplier 
					SET
					IS_USED = '1'
					WHERE
					SUPPLIER_ID = '{@#supplierId#}'  and
					ASIN = '{@#asin#}'
		</entry>
    
        <entry key="sql_product_upload">
       		SELECT sc_upload.*,( select count(1) from sc_gather_asin where sc_gather_asin.task_id = sc_upload.id ) as TOTAL,
				( select sc_user.name from sc_user where sc_user.login_id = sc_upload.uploador ) as USERNAME,
				( select sp.name from sc_platform sp where sp.id = sc_upload.platform_id) as PLATFORM_NAME
              FROM sc_upload 
              where 1=1 
              {@ #$VIEW_PU# }
              {@and sc_upload.group_id = '#groupId#' }
               order by upload_time desc 
    </entry>
    
    <entry key="sql_product_upload_count_fornocategory">
       		select count(*) c from sc_upload
       		 where 1=1 
              {@ #$VIEW_PU# }
              and ( sc_upload.group_id is null or sc_upload.group_id = '')
    </entry>
    
        <entry key="sql_product_upload_more">
       		SELECT sc_upload.*,( select count(1) from sc_gather_asin where sc_gather_asin.task_id = sc_upload.id ) as TOTAL,
				( select sc_user.name from sc_user where sc_user.login_id = sc_upload.uploador  limit 0,1 ) as USERNAME
              FROM sc_upload 
              where 1=1 
              {@ #$VIEW_PU# }
              and ( sc_upload.group_id is null or sc_upload.group_id = '')
               order by upload_time desc 
    </entry>
   
</properties>