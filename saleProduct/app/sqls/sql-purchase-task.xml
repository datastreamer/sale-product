<?xml version="1.0" encoding="UTF-8"?>
<properties>
	<entry key="sql_purchase_task_groupByPrintTime">
				SELECT sppd.PRINT_TIME,COUNT(sppd.PRINT_TIME) AS TOTAL FROM 
			sc_purchase_plan_details sppd,
			sc_purchase_task_products sptp 
			WHERE sppd.id = sptp.PRODUCT_ID
			AND sptp.TASK_ID = '{@#taskId#}'
			AND sppd.PRINT_TIME IS NOT NULL
			GROUP BY sppd.PRINT_TIME
		</entry>

    <entry key="sql_purchase_task_list">
        select spt.* ,
           (select name from sc_user where login_id = spt.created_by) as EXECUTOR_NAME,
           ( select count(*) from sc_purchase_task_products sptp 
						where sptp.task_id = spt.id   ) as STATUS0,
				( select count(*) from sc_purchase_task_products sptp , sc_purchase_plan_details sppd
						where sptp.task_id = spt.id  and sppd.id = sptp.product_id
						and ( sppd.status = 10 or sppd.status is null ) ) as STATUS10,
			 ( select count(*) from sc_purchase_task_products sptp , sc_purchase_plan_details sppd
						where sptp.task_id = spt.id  and sppd.id = sptp.product_id
						and ( sppd.status = 20   ) ) as STATUS20,	
			 ( select count(*) from sc_purchase_task_products sptp , sc_purchase_plan_details sppd
						where sptp.task_id = spt.id  and sppd.id = sptp.product_id
						and ( sppd.status = 25  ) ) as STATUS25,	
			 ( select count(*) from sc_purchase_task_products sptp , sc_purchase_plan_details sppd
						where sptp.task_id = spt.id  and sppd.id = sptp.product_id
						and ( sppd.status = 30 ) ) as STATUS30,	
			 ( select count(*) from sc_purchase_task_products sptp , sc_purchase_plan_details sppd
						where sptp.task_id = spt.id  and sppd.id = sptp.product_id
						and ( sppd.status = 40 ) ) as STATUS40,	
			 ( select count(*) from sc_purchase_task_products sptp , sc_purchase_plan_details sppd
						where sptp.task_id = spt.id  and sppd.id = sptp.product_id
						and ( sppd.status = 45  ) ) as STATUS45,	
			 ( select count(*) from sc_purchase_task_products sptp , sc_purchase_plan_details sppd
						where sptp.task_id = spt.id  and sppd.id = sptp.product_id
						and ( sppd.status = 46 ) ) as STATUS46,
			 ( select count(*) from sc_purchase_task_products sptp , sc_purchase_plan_details sppd
						where sptp.task_id = spt.id  and sppd.id = sptp.product_id
						and ( sppd.status = 47  ) ) as STATUS47,	
			 ( select count(*) from sc_purchase_task_products sptp , sc_purchase_plan_details sppd
						where sptp.task_id = spt.id  and sppd.id = sptp.product_id
						and ( sppd.status = 48  ) ) as STATUS48,	
			 ( select count(*) from sc_purchase_task_products sptp , sc_purchase_plan_details sppd
						where sptp.task_id = spt.id  and sppd.id = sptp.product_id
						and ( sppd.status = 50 ) ) as STATUS50,			
			 ( select count(*) from sc_purchase_task_products sptp , sc_purchase_plan_details sppd
						where sptp.task_id = spt.id  and sppd.id = sptp.product_id
						and ( sppd.status = 60 ) ) as STATUS60,			
			 ( select count(*) from sc_purchase_task_products sptp , sc_purchase_plan_details sppd
						where sptp.task_id = spt.id  and sppd.id = sptp.product_id
						and ( sppd.status = 70  ) ) as STATUS70,			
			 ( select count(*) from sc_purchase_task_products sptp , sc_purchase_plan_details sppd
						where sptp.task_id = spt.id  and sppd.id = sptp.product_id
						and ( sppd.status = 80  ) ) as STATUS80
         from sc_purchase_task spt 
         where 1=1
          {@ and spt.task_code = '#taskCode#'}
         {@ #$purchaseTask_view: and 1=0# }
         order by spt.id desc
    </entry>
    
     <entry key="sql_purchase_task_insert">
		INSERT INTO sc_purchase_task 
			(
			TASK_CODE, 
			CREATED_BY, 
			CREATED_TIME, 
			LAST_UPDATED_BY, 
			LAST_UPDATED_TIME, 
			MEMO, 
			STATUS,
			START_TIME,
			END_TIME
			)
			VALUES
			( 
			'{@#taskCode#}', 
			'{@#loginId#}', 
			NOW(), 
			'{@#loginId#}', 
			NOW(), 
			'{@#memo#}', 
			'1', 
			'{@#startTime#}',
			'{@#endTime#}'
			)
    </entry>
    
    <entry key="sql_purchase_task_update">
		UPDATE sc_purchase_task 
			SET
			TASK_CODE = '{@#taskCode#}' , 
			LAST_UPDATED_BY = '{@#loginId#}' , 
			START_TIME = '{@#startTime#}' , 
			END_TIME = '{@#endTime#}' , 
			LAST_UPDATED_TIME = NOW() , 
			MEMO = '{@#memo#}' 
			WHERE
			ID = '{@#id#}' 
    </entry>
    
    <entry key="sql_purchase_task_updateStatus">
        update sc_purchase_task set status = '{@#status#}' where id = '{@#taskId#}' and (status = '1' or status is null )
    </entry>
    
    
    <entry key="sql_purchase_task_getById">
        select 
           spt.*,
           (select name from sc_user where login_id = spt.created_by) as EXECUTOR_NAME
         from sc_purchase_task spt 
        where spt.id = '{@#taskId#}'
    </entry>
    
    
     <entry key="sql_purchase_task_product_insert">
        
		INSERT INTO sc_purchase_task_products 
			(TASK_ID, 
			PRODUCT_ID
			)
			VALUES
			('{@#taskId#}', 
			'{@#productId#}'
			)

    </entry>
    
    <!-- and sppd.executor = '{@#Evn.loginId#}' -->
    <entry key="sql_purchase_task_product_list">
		SELECT DISTINCT  
			sppd.* ,
			srp.name as TITLE,
			srp.IMAGE_URL,
			(select name from sc_supplier where id = sppd.PROVIDOR ) as PROVIDOR_NAME,
			su.NAME AS EXECUTOR_NAME,
			( select sc_user.name from sc_user where sc_user.login_id = sppd.creator ) as CREATOR_NAME,
			( sppd.PLAN_NUM - IFNULL(sppd.QUALIFIED_PRODUCTS_NUM,0) ) as SUPPIERABLE_NUM
		FROM 
		sc_purchase_task_products sptp,
		sc_purchase_plan_details sppd 
		LEFT JOIN sc_user su
		on su.login_id = sppd.executor
		left join sc_real_product srp
		on sppd.SKU = srp.real_sku
		WHERE 1=1 
		    and sptp.product_id = sppd.id
		    {@ and sptp.task_id = '#taskId#'}
		    {@ and sptp.task_id = '#taskId#'}
		    {@  and ( sppd.status = '#status1#' or sppd.status is null ) }
			{@  and sppd.status = '#status#' }
		    and sptp.task_id in (
		    		select spt.id
				         from sc_purchase_task spt 
				         where 1=1
				         {@ #$purchaseTask_view: and 1=0# }
		    )
		    {@ and (
				srp.name like '%#searchKey#%' or srp.real_sku = '#searchKey#'
				or su.name like '%#searchKey#%'
			)}
    </entry>
    
    <entry key="sql_purchase_product_listBySupplierId">
		SELECT DISTINCT  
			sppd.* ,
			srp.name as TITLE,
			srp.IMAGE_URL,
			(select name from sc_supplier where id = sppd.PROVIDOR ) as PROVIDOR_NAME,
			su.NAME AS EXECUTOR_NAME,
			( select sc_user.name from sc_user where sc_user.login_id = sppd.creator ) as CREATOR_NAME,
			( sppd.PLAN_NUM - IFNULL(sppd.QUALIFIED_PRODUCTS_NUM,0) ) as SUPPIERABLE_NUM
		FROM 
		sc_purchase_task_products sptp,
		sc_purchase_plan_details sppd 
		LEFT JOIN sc_user su
		on su.login_id = sppd.executor
		left join sc_real_product srp
		on sppd.SKU = srp.real_sku
		WHERE 1=1 
		    and sptp.product_id = sppd.id
		    {@ and sptp.task_id = '#taskId#'}
		    {@ and sptp.task_id = '#taskId#'}
		    {@  and ( sppd.status = '#status1#' or sppd.status is null ) }
			{@  and sppd.status = '#status#' }
		    and sptp.task_id in (
		    		select spt.id
				         from sc_purchase_task spt 
				         where 1=1
				         {@ #$purchaseTask_view: and 1=0# }
		    )
		    {@ and (
				srp.name like '%#searchKey#%' or srp.real_sku = '#searchKey#'
				or su.name like '%#searchKey#%'
			)}
			and sppd.REAL_PROVIDOR = '{@#supplierId#}'
    </entry>
    
    <entry key="sql_purchase_task_product_selectable">
    <![CDATA[
    	SELECT DISTINCT  
			sppd.* ,
			srp.name as TITLE,
			srp.IMAGE_URL,
			(select name from sc_supplier where id = sppd.PROVIDOR ) as PROVIDOR_NAME,
			(select name from sc_user where login_id = sppd.executor ) as EXECUTOR_NAME,
			( sppd.PLAN_NUM - IFNULL(sppd.QUALIFIED_PRODUCTS_NUM,0) ) as SUPPIERABLE_NUM
		FROM sc_purchase_plan_details sppd 
		left join sc_real_product srp
		on sppd.SKU = srp.real_sku
		WHERE 1=1 
			and sppd.status >=45
			and sppd.executor = '{@#Evn.loginId#}'
			and sppd.id not in (
				select product_id from sc_purchase_task_products where task_id = '{@#taskId#}'
			)
			{@ and ( srp.real_sku = '#searchKey#'  or srp.name like '%#searchKey#%'  or srp.memo  like '%#searchKey#%')}
			and ( sppd.PLAN_NUM - IFNULL(sppd.QUALIFIED_PRODUCTS_NUM,0) ) > 0
	]]>
    </entry>
    
    <!-- 获取入库完成的 -->
    <entry key="sql_purchase_task_productInedForPrint">
		SELECT DISTINCT  
			sppd.* ,
			srp.name as TITLE,
			srp.IMAGE_URL,
			(select name from sc_supplier where id = sppd.PROVIDOR ) as PROVIDOR_NAME,
			(select CONTACTOR from sc_supplier where id = sppd.PROVIDOR ) as PROVIDOR_CONTACTOR,
			(select MOBILE from sc_supplier where id = sppd.PROVIDOR ) as PROVIDOR_PHONE,
			(select name from sc_user where login_id = sppd.executor ) as EXECUTOR_NAME,
			( sppd.PLAN_NUM - IFNULL(sppd.QUALIFIED_PRODUCTS_NUM,0) ) as SUPPIERABLE_NUM,
			(select su.name from sc_purchase_plan_details_track sppdt , sc_user su
				 where sppdt.PD_ID =sppd.ID and sppdt.STATUS = 60
				 and sppdt.creator = su.login_id
				  limit 0,1  ) as WARHOUSE_USERNAME
		FROM 
		sc_purchase_task_products sptp,
		sc_purchase_plan_details sppd
		left join sc_real_product srp
		on sppd.SKU = srp.real_sku
		WHERE 1=1 
		    and sptp.product_id = sppd.id
		    and sptp.task_id = '{@#taskId#}'
			{@ and sppd.print_time = '#printTime#'}
			{@ and sppd.print_time is null and '#printTimeNull#' = '#printTimeNull#'}
			and sppd.warehouse_time is not null
			and sppd.status > 60
   </entry>
    
    <entry key="sql_purchase_task_productsForPrint">
		SELECT DISTINCT  
			sppd.* ,
			srp.name as TITLE,
			srp.IMAGE_URL,
			(select code from sc_supplier where id = sppd.PROVIDOR ) as PROVIDOR_CODE,
			(select name from sc_supplier where id = sppd.PROVIDOR ) as PROVIDOR_NAME,
			(select CONTACTOR from sc_supplier where id = sppd.PROVIDOR ) as PROVIDOR_CONTACTOR,
			(select MOBILE from sc_supplier where id = sppd.PROVIDOR ) as PROVIDOR_PHONE,
			(select name from sc_user where login_id = sppd.executor ) as EXECUTOR_NAME,
			( sppd.PLAN_NUM - IFNULL(sppd.QUALIFIED_PRODUCTS_NUM,0) ) as SUPPIERABLE_NUM
		FROM 
		sc_purchase_task_products sptp,
		sc_purchase_plan_details sppd 
		left join sc_real_product srp
		on sppd.SKU = srp.real_sku
		WHERE 1=1 
		    and sptp.product_id = sppd.id
		    and sptp.task_id = '{@#taskId#}'
			and sppd.executor = '{@#Evn.loginId#}'
			and ( sppd.PLAN_NUM - IFNULL(sppd.QUALIFIED_PRODUCTS_NUM,0) ) > 0
   </entry>
</properties>