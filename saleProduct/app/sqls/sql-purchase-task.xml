<?xml version="1.0" encoding="UTF-8"?>
<properties>
	<entry key="sql_purchase_task_groupByPrintTime">
				SELECT sptp.PRINT_TIME,COUNT(sptp.PRINT_TIME) AS TOTAL FROM 
			sc_purchase_task_products sptp 
			WHERE   sptp.TASK_ID = '{@#taskId#}'
			AND sptp.PRINT_TIME IS NOT NULL
			GROUP BY sptp.PRINT_TIME
		</entry>
		
		
		<entry key="sql_purchase_task_product_updateStatus">
				UPDATE sc_purchase_task_products 
					SET
					status = '{@#status#}'
					where
					task_id = '{@#taskId#}' 
					and product_id = '{@#productId#}' 
		</entry>
		
		<entry key="sql_update_sc_purchase_task_product">
				UPDATE sc_purchase_task_products 
					SET
					real_num = '{@#realNum#}' , 
					real_quote_price = '{@#realQuotePrice#}' , 
					quote_price = '{@#quotePrice#}' , 
					providor = '{@#providor#}' , 
					real_providor = '{@#realProvidor#}' , 
					area = '{@#area#}' , 
					{@status = '#status#' , }
					{@real_purchase_date = '#realPurchaseDate#' , }
					qualified_products_num = '{@#qualifiedProductsNum#}' , 
					bad_products_num = '{@#badProductsNum#}' , 
					check_memo = '{@#checkMemo#}' , 
					{@warehouse_time = '#warehouseTime#' , }
					{@ship_fee_type = '#shipFeeType#' , }
					{@real_ship_fee_type = '#realShipFeeType#' , }
					{@ship_fee = #shipFee# , }
					{@real_ship_fee = #realShipFee#, }
					warehouse_id = '{@#warehouseId#}' , 
					pay_type = '{@#payType#}' 
					{@, promise_delivery_date = '#promiseDeliveryDate#'}
					where
					task_id = '{@#taskId#}' 
					and product_id = '{@#productId#}' 
		</entry>

    <entry key="sql_purchase_task_list">
     <![CDATA[
        select spt.* ,
           (select name from sc_user where login_id = spt.created_by) as EXECUTOR_NAME,
           ( select count(1) from sc_purchase_task_products sptp where sptp.task_id = spt.id and sptp.status < 80  ) as TP_STATUS,
           ( select count(*) from sc_purchase_task_products sptp 
						where sptp.task_id = spt.id   ) as STATUS0,
			 ( select count(*) from sc_purchase_task_products sptp 
						where sptp.task_id = spt.id   
						and ( sptp.status = 45  ) ) as STATUS45,	
			( select count(*) from sc_purchase_task_products sptp 
						where sptp.task_id = spt.id   
						and ( sptp.status =  46 ) ) as STATUS46,
			( select count(*) from sc_purchase_task_products sptp 
						where sptp.task_id = spt.id   
						and ( sptp.status =  47  ) ) as STATUS47,	
			 ( select count(*) from sc_purchase_task_products sptp 
						where sptp.task_id = spt.id   
						and ( sptp.status = 48  ) ) as STATUS48,	
			( select count(*) from sc_purchase_task_products sptp 
						where sptp.task_id = spt.id   
						and ( sptp.status = 49  ) ) as STATUS49,	
			( select count(*) from sc_purchase_task_products sptp 
						where sptp.task_id = spt.id   
						and ( sptp.status =  50 ) ) as STATUS50,			
			( select count(*) from sc_purchase_task_products sptp 
						where sptp.task_id = spt.id   
						and ( sptp.status =  60 ) ) as STATUS60,			
			 ( select count(*) from sc_purchase_task_products sptp 
						where sptp.task_id = spt.id   
						and ( sptp.status = 70  ) ) as STATUS70,			
			( select count(*) from sc_purchase_task_products sptp 
						where sptp.task_id = spt.id   
						and ( sptp.status =  80  ) ) as STATUS80
         from sc_purchase_task spt 
         where 1=1
          {@ and spt.task_code like '%#taskCode#%'}
         {@ #$purchaseTask_view: and 1=0# }
         and ( 
            spt.status = 1
            or
            exists(
              select 1 from sc_purchase_task_products sptp where sptp.task_id = spt.id and sptp.status < 80 
            )
         )
         order by spt.id desc
        ]]>
    </entry>
    
    <entry key="sql_purchase_task_list_done">
     <![CDATA[
        select spt.* ,
           (select name from sc_user where login_id = spt.created_by) as EXECUTOR_NAME,
           ( select count(1) from sc_purchase_task_products sptp where sptp.task_id = spt.id and sptp.status < 80  ) as TP_STATUS,
           ( select count(*) from sc_purchase_task_products sptp 
						where sptp.task_id = spt.id   ) as STATUS0,
			 ( select count(*) from sc_purchase_task_products sptp 
						where sptp.task_id = spt.id   
						and ( sptp.status = 45  ) ) as STATUS45,	
			( select count(*) from sc_purchase_task_products sptp 
						where sptp.task_id = spt.id   
						and ( sptp.status =  46 ) ) as STATUS46,
			( select count(*) from sc_purchase_task_products sptp 
						where sptp.task_id = spt.id   
						and ( sptp.status =  47  ) ) as STATUS47,	
			 ( select count(*) from sc_purchase_task_products sptp 
						where sptp.task_id = spt.id   
						and ( sptp.status = 48  ) ) as STATUS48,	
			( select count(*) from sc_purchase_task_products sptp 
						where sptp.task_id = spt.id   
						and ( sptp.status = 49  ) ) as STATUS49,	
			( select count(*) from sc_purchase_task_products sptp 
						where sptp.task_id = spt.id   
						and ( sptp.status =  50 ) ) as STATUS50,			
			( select count(*) from sc_purchase_task_products sptp 
						where sptp.task_id = spt.id   
						and ( sptp.status =  60 ) ) as STATUS60,			
			 ( select count(*) from sc_purchase_task_products sptp 
						where sptp.task_id = spt.id   
						and ( sptp.status = 70  ) ) as STATUS70,			
			( select count(*) from sc_purchase_task_products sptp 
						where sptp.task_id = spt.id   
						and ( sptp.status =  80  ) ) as STATUS80
         from sc_purchase_task spt 
         where 1=1
          {@ and spt.task_code like '%#taskCode#%'}
         {@ #$purchaseTask_view: and 1=0# }
         and 
            exists(
              select 1 from sc_purchase_task_products sptp where sptp.task_id = spt.id and sptp.status = 80 
            )
         order by spt.id desc
        ]]>
    </entry>
    
     <entry key="sql_purchase_task_insert">
		INSERT INTO sc_purchase_task 
			(
			TASK_CODE, 
			CREATED_BY, 
			CREATED_TIME, 
			LAST_UPDATED_BY, 
			LAST_UPDATED_TIME, 
			MEMO, 
			STATUS,
			START_TIME,
			END_TIME,
			NAME
			)
			VALUES
			( 
			'{@#taskCode#}', 
			'{@#loginId#}', 
			NOW(), 
			'{@#loginId#}', 
			NOW(), 
			'{@#memo#}', 
			'1', 
			'{@#startTime#}',
			'{@#endTime#}',
			'{@#name#}'
			)
    </entry>
    
    <entry key="sql_purchase_task_update">
		UPDATE sc_purchase_task 
			SET
			TASK_CODE = '{@#taskCode#}' , 
			LAST_UPDATED_BY = '{@#loginId#}' , 
			START_TIME = '{@#startTime#}' , 
			END_TIME = '{@#endTime#}' , 
			LAST_UPDATED_TIME = NOW() , 
			MEMO = '{@#memo#}' ,
			NAME = '{@#name#}' 
			WHERE
			ID = '{@#id#}' 
    </entry>
    
    <entry key="sql_purchase_task_updateStatus">
        update sc_purchase_task set status = '{@#status#}' , PURCHASE_CONFIRM_DATE = NOW()  where id = '{@#taskId#}'
    </entry>
    
    
    <entry key="sql_purchase_task_getById">
        select 
           spt.*,
           (select name from sc_user where login_id = spt.created_by) as EXECUTOR_NAME
         from sc_purchase_task spt 
        where spt.id = '{@#taskId#}'
    </entry>
    
    
     <entry key="sql_purchase_task_product_insert">
        
		INSERT INTO sc_purchase_task_products 
			(TASK_ID, 
			PRODUCT_ID,
			STATUS
			)
			VALUES
			('{@#taskId#}', 
			'{@#productId#}',
			'45'
			)

    </entry>
    
    <!-- 
    SELECT DISTINCT  
			sppd.* ,
			srp.name as TITLE,
			srp.IMAGE_URL,
			(select name from sc_supplier where id = sppd.PROVIDOR ) as PROVIDOR_NAME,
			su.NAME AS EXECUTOR_NAME,
			( select sc_user.name from sc_user where sc_user.login_id = sppd.creator ) as CREATOR_NAME,
			( sppd.PLAN_NUM - IFNULL(sppd.QUALIFIED_PRODUCTS_NUM,0) ) as SUPPIERABLE_NUM
		FROM 
		sc_purchase_task_products sptp,
		sc_purchase_plan_details sppd 
		LEFT JOIN sc_user su
		on su.login_id = sppd.executor
		left join sc_real_product srp
		on sppd.SKU = srp.real_sku
		WHERE 1=1 
		    and sptp.product_id = sppd.id
		      {@ and sptp.task_id = '#taskId#'}
		    {@ and sptp.task_id = '#taskId#'}
		    {@  and ( sppd.status = '#status1#' or sppd.status is null ) }
			{@  and sppd.status = '#status#' }
		    and sptp.task_id in (
		    		select spt.id
				         from sc_purchase_task spt 
				         where 1=1
				         {@ #$purchaseTask_view: and 1=0# }
		    )
		    {@ and (
				srp.name like '%#searchKey#%' or srp.real_sku = '#searchKey#'
				or su.name like '%#searchKey#%'
			)}
    -->
    <entry key="sql_purchase_task_product_list">
    select * from (
		SELECT
		    sptp.TASK_ID,
		    sppd.ID, 
			sppd.ASIN, 
			(SELECT spdt.MESSAGE FROM sc_purchase_plan_details_track spdt WHERE spdt.pd_id = sppd.id
						ORDER BY spdt.create_time DESC LIMIT 0,1) AS MEMO,
			sppd.SKU, 
			srp.REAL_SKU,
			sppd.PLAN_NUM, 
			sppd.REAl_PURCHASE_NUM, 
			sppd.PLAN_ID,
			sppd.LIMIT_PRICE,
			sppd.EXECUTOR, 
			sppd.PLAN_START_TIME, 
			sppd.PLAN_END_TIME, 
			sppd.TAGS,
			sptp.STATUS,
            sptp.QTC,
            sptp.QUALIFIED_PRODUCTS_NUM, 
            sptp.QUOTE_PRICE,
            sptp.AREA,
            sptp.WAREHOUSE_TIME,
			srp.name AS TITLE,
			srp.IMAGE_URL,
			(SELECT NAME FROM sc_supplier WHERE id =sptp.PROVIDOR ) AS PROVIDOR_NAME,
			su.NAME AS EXECUTOR_NAME,
			( SELECT sc_user.name FROM sc_user WHERE sc_user.login_id = sppd.creator ) AS CREATOR_NAME,
			( sppd.PLAN_NUM - IFNULL(sppd.REAl_PURCHASE_NUM,0) ) AS SUPPIERABLE_NUM
		FROM 
		sc_purchase_task_products sptp,
		sc_purchase_plan_details sppd 
		LEFT JOIN sc_user su
		ON su.login_id = sppd.executor
		LEFT JOIN sc_real_product srp
		ON (  srp.ID = sppd.REAL_ID)
		WHERE 1=1 
		    AND sptp.product_id = sppd.id
		    {@ and sptp.task_id = '#taskId#'}
		    {@ and sptp.task_id = '#taskId#'}
		    {@  and ( sppd.status = '#status1#' or sppd.status is null ) }
			{@  and sppd.status = '#status#' }
		    and sptp.task_id in (
		    		select spt.id
				         from sc_purchase_task spt 
				         where 1=1
				         {@ #$purchaseTask_view: and 1=0# }
		    )
		   
			and sptp.status != 80
		) t
		where 1=1
		 {@ and (
				t.title like '%#searchKey#%' or t.real_sku = '#searchKey#'
				or t.EXECUTOR_NAME like '%#searchKey#%'
				or t.memo like  '%#searchKey#%'
			)}
			order by t.task_id desc
    </entry>
    
    <entry key="sql_purchase_task_product_list_countSql">
		select count(*) from (
		SELECT
		    sptp.TASK_ID,
			(SELECT spdt.MESSAGE FROM sc_purchase_plan_details_track spdt WHERE spdt.pd_id = sppd.id
						ORDER BY spdt.create_time DESC LIMIT 0,1) AS MEMO,
			srp.REAL_SKU,
			srp.name AS TITLE,
			(SELECT NAME FROM sc_supplier WHERE id =sptp.PROVIDOR ) AS PROVIDOR_NAME,
			su.NAME AS EXECUTOR_NAME
		FROM 
		sc_purchase_task_products sptp,
		sc_purchase_plan_details sppd 
		LEFT JOIN sc_user su
		ON su.login_id = sppd.executor
		LEFT JOIN sc_real_product srp
		ON (  srp.ID = sppd.REAL_ID)
		WHERE 1=1 
		    AND sptp.product_id = sppd.id
		    {@ and sptp.task_id = '#taskId#'}
		    {@ and sptp.task_id = '#taskId#'}
		    {@  and ( sppd.status = '#status1#' or sppd.status is null ) }
			{@  and sppd.status = '#status#' }
		    and sptp.task_id in (
		    		select spt.id
				         from sc_purchase_task spt 
				         where 1=1
				         {@ #$purchaseTask_view: and 1=0# }
		    )
			and sptp.status != 80
		) t
		where 1=1
		 {@ and (
				t.title like '%#searchKey#%' or t.real_sku = '#searchKey#'
				or t.EXECUTOR_NAME like '%#searchKey#%'
				or t.memo like  '%#searchKey#%'
			)}
    </entry>
    
    <entry key="sql_purchase_task_product_list_done">
    select * from (
		SELECT   
			sppd.ID, 
			sppd.ASIN, 
			(SELECT spdt.MESSAGE FROM sc_purchase_plan_details_track spdt WHERE spdt.pd_id = sppd.id
	ORDER BY spdt.create_time DESC LIMIT 0,1) AS MEMO,
			sppd.SKU, 
			srp.REAL_SKU,
			sppd.PLAN_NUM, 
			sppd.REAl_PURCHASE_NUM, 
			sppd.PLAN_ID,
			sppd.LIMIT_PRICE,
			sppd.EXECUTOR, 
			sppd.PLAN_START_TIME, 
			sppd.PLAN_END_TIME, 
			sppd.TAGS,
			sptp.* ,
			srp.name AS TITLE,
			srp.IMAGE_URL,
			(SELECT NAME FROM sc_supplier WHERE id =sptp.PROVIDOR ) AS PROVIDOR_NAME,
			su.NAME AS EXECUTOR_NAME,
			( SELECT sc_user.name FROM sc_user WHERE sc_user.login_id = sppd.creator ) AS CREATOR_NAME,
			( sppd.PLAN_NUM - IFNULL(sppd.REAl_PURCHASE_NUM,0) ) AS SUPPIERABLE_NUM
		FROM 
		sc_purchase_task_products sptp,
		sc_purchase_plan_details sppd 
		LEFT JOIN sc_user su
		ON su.login_id = sppd.executor
		LEFT JOIN sc_real_product srp
		ON (  srp.ID = sppd.REAL_ID)
		WHERE 1=1 
		    AND sptp.product_id = sppd.id
		    {@ and sptp.task_id = '#taskId#'}
		    {@ and sptp.task_id = '#taskId#'}
		    {@  and ( sppd.status = '#status1#' or sppd.status is null ) }
			{@  and sppd.status = '#status#' }
		    and sptp.task_id in (
		    		select spt.id
				         from sc_purchase_task spt 
				         where 1=1
				         {@ #$purchaseTask_view: and 1=0# }
		    )
			and sptp.status = 80
		) t
		where 1=1
		 {@ and (
				t.title like '%#searchKey#%' or t.real_sku = '#searchKey#'
				or t.EXECUTOR_NAME like '%#searchKey#%'
				or t.memo like  '%#searchKey#%'
			)}
			order by t.task_id desc
    </entry>
    
    <entry key="sql_purchase_product_listByRealId">
		SELECT DISTINCT  
			spp.* ,
			srp.name as TITLE,
			srp.IMAGE_URL,
			srp.REAL_SKU,
			(select name from sc_supplier where id = spp.PROVIDOR ) as PROVIDOR_NAME,
			su.NAME AS EXECUTOR_NAME,
			( select sc_user.name from sc_user where sc_user.login_id = spp.created_by ) as CREATOR_NAME
		FROM 
		sc_purchase_product spp
		LEFT JOIN sc_user su
		on su.login_id = spp.executor
		left join sc_real_product srp
		on spp.REAL_ID = srp.ID
		WHERE 1=1
		and spp.real_id = '{@#productId#}'
			order by spp.real_purchase_date desc
    </entry>
    
    <entry key="sql_purchase_product_listBySupplierId">
		SELECT DISTINCT  
			sptp.* ,
			sppd.SKU,
			srp.name as TITLE,
			srp.IMAGE_URL,
			(select name from sc_supplier where id = sptp.PROVIDOR ) as PROVIDOR_NAME,
			su.NAME AS EXECUTOR_NAME,
			( select sc_user.name from sc_user where sc_user.login_id = sppd.creator ) as CREATOR_NAME
		FROM 
		sc_purchase_task_products sptp,
		sc_purchase_plan_details sppd 
		LEFT JOIN sc_user su
		on su.login_id = sppd.executor
		left join sc_real_product srp
		on sppd.REAL_ID = srp.ID
		WHERE 1=1 
		    and sptp.product_id = sppd.id
		    {@ and sptp.task_id = '#taskId#'}
		    {@ and sptp.task_id = '#taskId#'}
		    {@  and ( sppd.status = '#status1#' or sppd.status is null ) }
			{@  and sppd.status = '#status#' }
		    and sptp.task_id in (
		    		select spt.id
				         from sc_purchase_task spt 
				         where 1=1
				         {@ #$purchaseTask_view: and 1=0# }
		    )
		    {@ and (
				srp.name like '%#searchKey#%' or srp.real_sku = '#searchKey#'
				or su.name like '%#searchKey#%'
			)}
			{@ and sptp.REAL_PROVIDOR = '#supplierId#'}
			{@ and srp.id = '#productId#' }
			order by sptp.real_purchase_date desc
    </entry>
    
    <entry key="sql_purchase_task_product_selectable">
    <![CDATA[
    	SELECT DISTINCT  
			sppd.* ,
			srp.name AS TITLE,
			srp.REAL_SKU,
			srp.IMAGE_URL,
			(SELECT NAME FROM sc_user WHERE login_id = sppd.executor ) AS EXECUTOR_NAME,
			( sppd.PLAN_NUM - IFNULL(sppd.REAL_PURCHASE_NUM,0) ) AS SUPPIERABLE_NUM
		FROM sc_purchase_plan_details sppd 
		LEFT JOIN sc_real_product srp
		ON ( sppd.REAL_ID = srp.ID  )
		WHERE 1=1 
		  	and sppd.executor = '{@#loginId#}'
		  AND not EXISTS(
		    SELECT sptp.product_id FROM sc_purchase_task_products sptp
			WHERE sptp.product_id = sppd.ID AND sptp.STATUS < 80
		  )
		  and sppd.STATUS > 25
			and sppd.id not in (
				select product_id from sc_purchase_task_products where task_id = '{@#taskId#}'
			)
			{@ and ( srp.real_sku = '#searchKey#'  or srp.name like '%#searchKey#%'  or srp.memo  like '%#searchKey#%')}
			and ( sppd.PLAN_NUM - IFNULL(sppd.REAL_PURCHASE_NUM,0) ) > 0
	]]>
    </entry>
    
    <!-- 获取入库完成的 -->
    <entry key="sql_purchase_task_productInedForPrint">
			SELECT DISTINCT  
			srp.REAL_SKU as SKU ,
			sppd.TAGS,
			sptp.*,
			srp.name AS TITLE,
			srp.IMAGE_URL,
			(SELECT NAME FROM sc_supplier WHERE id = sptp.PROVIDOR ) AS PROVIDOR_NAME,
			(SELECT CONTACTOR FROM sc_supplier WHERE id = sptp.PROVIDOR ) AS PROVIDOR_CONTACTOR,
			(SELECT MOBILE FROM sc_supplier WHERE id = sptp.PROVIDOR ) AS PROVIDOR_PHONE,
			(SELECT NAME FROM sc_user WHERE login_id = sppd.executor ) AS EXECUTOR_NAME,
			( sppd.PLAN_NUM - IFNULL(sppd.REAL_PURCHASE_NUM,0) ) AS SUPPIERABLE_NUM,
			(SELECT su.name FROM sc_purchase_plan_details_track sppdt , sc_user su
				 WHERE sppdt.PD_ID =sppd.ID AND sppdt.STATUS = 60
				 AND sppdt.creator = su.login_id
				  LIMIT 0,1  ) AS WARHOUSE_USERNAME
		FROM 
			sc_purchase_task_products sptp,
			sc_purchase_plan_details sppd
			LEFT JOIN sc_real_product srp
			ON ( sppd.REAL_ID = srp.ID)
		WHERE 1=1 
		    AND sptp.product_id = sppd.id
		      and sptp.task_id = '{@#taskId#}'
			{@ and sptp.print_time = '#printTime#'}
			{@ and sptp.print_time is null and '#printTimeNull#' = '#printTimeNull#'}
		    AND sptp.warehouse_time IS NOT NULL
		    AND sptp.status > 60
   </entry>
    
    <!-- and sppd.executor = '{@#Evn.loginId#}' 
    
			and ( sppd.PLAN_NUM - IFNULL(sppd.REAL_PURCHASE_NUM,0) ) > 0
    -->
    <entry key="sql_purchase_task_productsForPrint">
		SELECT DISTINCT  
		    srp.REAL_SKU as SKU,
		    sppd.TAGS,
		    sppd.MEMO,
			sptp.* ,
			srp.name AS TITLE,
			srp.IMAGE_URL,
			(SELECT CODE FROM sc_supplier WHERE id = sptp.PROVIDOR ) AS PROVIDOR_CODE,
			(SELECT NAME FROM sc_supplier WHERE id = sptp.PROVIDOR ) AS PROVIDOR_NAME,
			(SELECT CONTACTOR FROM sc_supplier WHERE id = sptp.PROVIDOR ) AS PROVIDOR_CONTACTOR,
			(SELECT MOBILE FROM sc_supplier WHERE id = sptp.PROVIDOR ) AS PROVIDOR_PHONE,
			(SELECT NAME FROM sc_user WHERE login_id = sppd.executor ) AS EXECUTOR_NAME,
			( sppd.PLAN_NUM - IFNULL(sppd.REAL_PURCHASE_NUM,0) ) AS SUPPIERABLE_NUM
		FROM 
		sc_purchase_task_products sptp,
		sc_purchase_plan_details sppd 
		left join sc_real_product srp
		on (   srp.id = sppd.real_id)
		WHERE 1=1 
		    and sptp.product_id = sppd.id
		    and sptp.task_id = '{@#taskId#}'
   </entry>
</properties>