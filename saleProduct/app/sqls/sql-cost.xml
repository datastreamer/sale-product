<?xml version="1.0" encoding="UTF-8"?>
<properties>
    <entry key="sql_">
    </entry>
    
    <entry  key="sql_cost_getListCostByRealId">
		SELECT saap.SKU AS SELLER_SKU, srp.*,
						saap.ACCOUNT_ID,
						saa.name as ACCOUNT_NAME,
						saap.FULFILLMENT_CHANNEL,
				        spcd.LOGISTICS_COST, 
				        saap.PRICE+IFNULL(saap.SHIPPING_PRICE,0) as TOTAL_PRICE,
						spcd.OTHER_COST,  
						spcd.WEIGHT_HANDLING_FEE, 
						spcd.ORDER_HANDLING_FEE, 
						spcd.FBA_DELIVERRY_SERVICES_FEE, 
						spcd.PICK_AND_PACK_FEE, 
						spcd.STORAGE_FEE, 
						spcd.FBA_COST, 
						spcd.VARIABLE_CLOSING_FEE, 
						spcd.COMMISSION_RATIO,
						( case saap.FULFILLMENT_CHANNEL when 'Merchant' then 0 else  saa.INVENTORY_CENTER_FEE end  ) as INVENTORY_CENTER_FEE,
						saa.FEE_RATIO,
						(select name from sc_warehouse sw where sw.id = saa.fbm_warehouse) as FBM_WAREHOUSE_NAME
				 FROM sc_real_product srp,
							sc_real_product_rel srpr,
				            sc_amazon_account saa,
							sc_amazon_account_product saap
					        left join sc_product_cost_details spcd
				           on spcd.account_id = saap.account_id
				             and spcd.listing_sku = saap.sku
							WHERE srp.ID = srpr.REAL_ID
							AND srpr.SKU = saap.SKU
							and saap.status = 'Y'
							and saap.account_id = saa.id
							and srp.id = '{@#realId#}'
    </entry>
    
    <entry  key="sql_cost_insert_new">
		INSERT INTO sc_product_cost 
			( ID, 
			REAL_ID, 
			CREATOR, 
			CREATE_TIME
			)
			VALUES
			('{@#ID#}', 
			'{@#REAL_ID#}', 
			'{@#loginId#}', 
			NOW()
			)
    </entry>
    
     <entry  key="sql_cost_update_new">
		    UPDATE sc_product_cost 
			SET
			{@LOGISTICS_COST = '#LOGISTICS_COST#' , }
			{@PURCHASE_COST = '#PURCHASE_COST#' , }
			{@OTHER_COST = '#OTHER_COST#' , }
			{@TAG_COST = '#TAG_COST#' , }
			{@LABOR_COST = '#LABOR_COST#' , }
			{@FEE = '#FEE#' , }
			LAST_UPDATOR = '{@#loginId#}' , 
			LAST_UPDATE_TIME = NOW()
			
			WHERE
			ID = '{@#ID#}'
    </entry>
    
    
    <entry  key="sql_cost_details_insert_new">
			INSERT INTO sc_product_cost_details 
				(ID, 
				COST_ID, 
				ACCOUNT_ID, 
				LISTING_SKU, 
				CREATOR, 
				CREATE_DATE
				)
				VALUES
				('{@#ID#}', 
				'{@#COST_ID#}', 
				'{@#ACCOUNT_ID#}', 
				'{@#LISTING_SKU#}', 
				'{@#loginId#}', 
				NOW()
				)
	</entry>
	
	<entry  key="sql_cost_details_update_new">
	
			UPDATE sc_product_cost_details 
				SET
				COST_ID = '{@#COST_ID#}' , 
				ACCOUNT_ID = '{@#ACCOUNT_ID#}' , 
				LISTING_SKU = '{@#LISTING_SKU#}' , 
				{@LOGISTICS_COST = '#LOGISTICS_COST#' ,} 
				{@FEE = '#FEE#' , }
				{@AMAZON_FEE = '#AMAZON_FEE#' , }
				{@ORDER_COST = '#ORDER_COST#' , }
				{@OTHER_COST = '#OTHER_COST#' , }
				LAST_UPDATOR = '{@#loginId#}' , 
				LAST_UPDATE_DATE =NOW()
				WHERE
				ID = '{@#ID#}'
	</entry>
	
	<entry  key="sql_cost_details_insert_new_forfee">
			INSERT INTO sc_product_cost_details 
				(ID, 
				COST_ID, 
				ACCOUNT_ID, 
				LISTING_SKU, 
				CREATOR, 
				CREATE_DATE
				)
				VALUES
				('{@#ID#}', 
				'{@#COST_ID#}', 
				'{@#accountId#}', 
				'{@#listingSku#}', 
				'{@#loginId#}', 
				NOW()
				)
	</entry>
	
	 <!-- 
	 {"weightHandlingFee":"0.46","orderHandlingFee":0,"fbaDeliveryServicesFee":0,"commissionFee":"2.25","pickAndPackFee":"1","storageFee":"0.02","variableClosingFee":"1.35"}
	  -->
	<entry  key="sql_cost_details_update_new_forfee">
				UPDATE sc_product_cost_details 
				SET
				ID = '{@#ID#}'   
				{@ ,WEIGHT_HANDLING_FEE = '#weightHandlingFee#' }
				{@ ,ORDER_HANDLING_FEE = '#orderHandlingFee#' }
				{@ ,FBA_DELIVERRY_SERVICES_FEE = '#fbaDeliveryServicesFee#' }
				{@ ,PICK_AND_PACK_FEE = '#pickAndPackFee#' }
				{@ ,STORAGE_FEE = '#storageFee#' }
				{@ ,VARIABLE_CLOSING_FEE = '#variableClosingFee#' }
				{@ ,COMMISSION_RATIO = '#commissionRatio#' }
				{@ ,COMMISSION_LOWLIMIT = '#commissionLowlimit#' }
				{@ ,FBA_COST = '#fbaCost#' }
				WHERE
				ID = '{@#ID#}'
	</entry>
    <!--
    	TODO:
    	outAemricanArea: 1
    	inAemricanArea : 0
    	
    	当空时设置：
    	itemContidtionNull:1
    	
    	fulfillmentChannelNull:1
    	
    	isPriceQuery:1
    	isQuantityQuery:1
    	
    	pm:other ==>0
    	
    	uncategory：1
    -->
    
    <entry key="sql_cost_product_insert_simple">
   	 INSERT INTO sc_product_cost 
			( 
			TYPE, 
			PURCHASE_COST, 
			SKU, 
			CREATOR,
			CREATE_TIME,
			LAST_UPDATE_TIME
			)
			VALUES
			(
			'{@#TYPE#}', 
			'{@#PURCHASE_COST#}', 
			'{@#SKU#}', 
			'{@#loginId#}',
			NOW(),
			now()
			) 
   </entry>
   
   <entry key="sql_cost_product_insert">
   	 INSERT INTO sc_product_cost 
			( 
			TYPE, 
			PURCHASE_COST, 
			ASIN,
			SKU, 
			BEFORE_LOGISTICS_COST, 
			TARIFF, 
			AMAZON_FEE, 
			VARIABLE_CLOSURE_COST, 
			OORDER_PROCESSING_FEE, 
			USPS_COST, 
			TAG_COST, 
			PACKAGE_COST, 
			STABLE_COST, 
			WAREHOURSE_COST, 
			LOST_FEE, 
			LABOR_COST, 
			SERVICE_COST, 
			OTHER_COST,
			TOTAL_COST,
			SALE_PRICE,
			PROFIT_NUM,
			PROFIT_MARGINS,
			CREATOR,
			CREATE_TIME
			)
			VALUES
			(
			'{@#TYPE#}', 
			'{@#PURCHASE_COST#}', 
			'{@#ASIN#}', 
			'{@#SKU#}', 
			'{@#BEFORE_LOGISTICS_COST#}', 
			'{@#TARIFF#}', 
			'{@#AMAZON_FEE#}', 
			'{@#VARIABLE_CLOSURE_COST#}', 
			'{@#OORDER_PROCESSING_FEE#}', 
			'{@#USPS_COST#}', 
			'{@#TAG_COST#}', 
			'{@#PACKAGE_COST#}', 
			'{@#STABLE_COST#}', 
			'{@#WAREHOURSE_COST#}', 
			'{@#LOST_FEE#}', 
			'{@#LABOR_COST#}', 
			'{@#SERVICE_COST#}', 
			'{@#OTHER_COST#}',
			'{@#TOTAL_COST#}',
			'{@#SALE_PRICE#}',
			'{@#PROFIT_NUM#}',
			'{@#PROFIT_MARGINS#}',
			'{@#loginId#}',
			NOW()
			) 
   </entry>
   
   <entry key="sql_cost_product_update">
   	 UPDATE sc_product_cost 
		SET
		{@ TYPE = '#TYPE#',}
		{@ PURCHASE_COST = '#PURCHASE_COST#' , }
		{@ ASIN = '#ASIN#' , }
		{@ SKU = '#SKU#' , }
		{@ BEFORE_LOGISTICS_COST = '#BEFORE_LOGISTICS_COST#' , }
		{@ TARIFF = '#TARIFF#' , }
		{@ AMAZON_FEE = '#AMAZON_FEE#' , }
		{@ VARIABLE_CLOSURE_COST = '#VARIABLE_CLOSURE_COST#' , }
		{@ OORDER_PROCESSING_FEE = '#OORDER_PROCESSING_FEE#' , }
		{@ USPS_COST = '#USPS_COST#' , }
		{@ TAG_COST = '#TAG_COST#' , }
		{@ PACKAGE_COST = '#PACKAGE_COST#' , }
		{@ STABLE_COST = '#STABLE_COST#' , }
		{@ WAREHOURSE_COST = '#WAREHOURSE_COST#' , }
		{@ LOST_FEE = '#LOST_FEE#' , }
		{@ LABOR_COST = '#LABOR_COST#' , }
		{@ SERVICE_COST = '#SERVICE_COST#' , }
		{@ OTHER_COST = '#OTHER_COST#' ,}
		{@ TOTAL_COST = '#TOTAL_COST#' ,}
		{@ SALE_PRICE = '#SALE_PRICE#' , }
		{@ PROFIT_NUM = '#PROFIT_NUM#' ,}
		{@ PROFIT_MARGINS = '#PROFIT_MARGINS#' ,}
		{@ PROFIT_NUM = '#PROFIT_NUM#' ,}
		{@ LAST_UPDATOR = '#loginId#' ,}
		LAST_UPDATE_TIME = now(),
		ID = '{@#ID#}'
		WHERE
		ID = '{@#ID#}'
   </entry>
   
   <entry key="sql_cost_product_list">
   SELECT DISTINCT sc_product.*,sc_product_flow_details.DAY_PAGEVIEWS,
				sc_sale_competition.FM_NUM,sc_sale_competition.NM_NUM,sc_sale_competition.UM_NUM,
				sc_sale_fba.FBA_NUM,sc_sale_competition.TARGET_PRICE,
				sc_sale_potential.REVIEWS_NUM,sc_sale_potential.QUALITY_POINTS,
				(SELECT spi.local_url FROM sc_product_imgs spi WHERE spi.asin = sc_product.asin LIMIT 0,1 ) AS LOCAL_URL  
				FROM sc_product
				LEFT JOIN sc_sale_competition  ON sc_sale_competition.asin = sc_product.asin
				LEFT JOIN sc_sale_fba  ON sc_sale_fba.asin = sc_product.asin
				LEFT JOIN sc_sale_potential  ON sc_sale_potential.asin = sc_product.asin
                LEFT JOIN sc_product_flow_details  ON sc_product_flow_details.asin = sc_product.asin
                where 1=1
                {@ and sc_product.title like '%#title#%'}
                {@ and sc_product.asin = '#asin#'}
                {@ and sc_product.asin in ( select sc_product_filter_details.asin 
                	from sc_product_filter_details where sc_product_filter_details.status in (5,7)  )
                  and 1=#unAsin#
                }
   </entry>
   
   <entry key="sql_cost_product_details_list_new">
 				 SELECT  * from  sc_view_listing_cost
 				 where 1=1
 				 {@
 				 and (
 				 	listing_sku like '%#searchKey#%'
 				 	or
 				 	real_sku like '%#searchKey#%'
 				 	or 
 				 	asin = '#searchKey#'
 				 	or 
 				 	name like '%#searchKey#%'
 				 )
 				 
 				 }
   </entry>
   
    <entry key="sql_cost_product_details_list">
 				 SELECT sc_product_cost.* ,
 					 ( select sp.TITLE from sc_product sp where  sc_product_cost.asin = sp.asin limit 0,1) as PRODUCT_TITLE,
 					 ( select sp.NAME from sc_real_product sp where  sc_product_cost.sku = sp.real_sku limit 0,1) as REAL_PRODUCT_TITLE
 				 from sc_product_cost
                where 1=1 
                {@ and type = '#type#'}
              and   ( 	1=1
					{@ and ( 
							sc_product_cost.sku = '#realSku#'
							or 
							sc_product_cost.asin in (
								select spd.asin 
								from sc_real_product srp,
								sc_product_dev spd
								 where 
								 srp.id = spd.real_product_id
								 and srp.real_sku = '#realSku#'
							)
						)
					}
					{@ and sc_product_cost.asin = '#asin#'}
		    	)
		    	
		    	 {@ and (
                	 sc_product_cost.asin in (
                		select sp.ASIN from sc_product sp where  sc_product_cost.TITLE = '#title#'
                	)
                	or 
                	 sc_product_cost.sku in (
                		select sp.real_sku from sc_real_product sp where 
                			 sc_product_cost.name = '#title#'
                	)
                ) 
                } 
             order by last_update_time desc
   </entry>

   
</properties>