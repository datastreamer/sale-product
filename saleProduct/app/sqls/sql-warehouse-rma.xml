<?xml version="1.0" encoding="UTF-8"?>
<properties>
    <entry key="sql_warehouse_rma_loadStatusCount">
   		SELECT STATUS,COUNT(STATUS) AS C FROM sc_ram_event GROUP BY status
   </entry>
	
   <entry key="sql_ram_options_list">
  		select * from sc_ram_options order by type
   </entry>
   
   <entry key="sql_ram_options_getByCode">
  		select * from sc_ram_options where code = '{@#code#}'
   </entry>
   
   
   <entry key="sql_ram_options_getByType">
  		select * from sc_ram_options where type = '{@#type#}'
   </entry>
   
   <entry key="sql_ram_option_insert">	
	INSERT INTO  sc_ram_options 
		(CODE, 
		NAME, 
		TYPE, 
		MEMO,
		IS_RESEND,
		IS_REFUND,
		IS_BACK
		)
		VALUES
		('{@#code#}', 
		'{@#name#}', 
		'{@#type#}', 
		'{@#memo#}', 
		'{@#isResend#}', 
		'{@#isRefund#}',
		'{@#isBack#}'
		)
   </entry>
   
   <entry key="sql_ram_option_update">
		UPDATE sc_ram_options 
			SET
			NAME = '{@#name#}' , 
			TYPE = '{@#type#}' , 
			MEMO = '{@#memo#}' ,
			IS_RESEND = '{@#isResend#}',
			IS_REFUND = '{@#isRefund#}',
			IS_BACK='{@#isBack#}'
			
			WHERE
			CODE = '{@#code#}'  
   </entry>
   
   <entry key="sql_ram_event_getById">
  		select * from sc_ram_event where id = '{@#id#}'
   </entry>
   
   <entry key="sql_ram_event_getByCode">
  		select * from sc_ram_event where code = '{@#code#}'
   </entry>
   
   <entry key="sql_ram_event_getByOrderId">
  		SELECT t.* FROM (
		SELECT s1.* FROM sc_ram_event s1
			 where s1.order_id = '{@#orderId#}'
		 ORDER BY create_time DESC 
		) t LIMIT 0,1;
   </entry>
	
	<!-- 
	 srp.IMAGE_URL,
		  srp.REAL_SKU,
	 -->
   <entry key="sql_ram_events_list">
  		SELECT s1.* ,
		  (SELECT GROUP_CONCAT( CONCAT(s4.IMAGE_URL,'|',s4.id) SEPARATOR ';' ) 
	                    	FROM sc_order_item soi
	                    	LEFT JOIN sc_real_product_rel s3 ON s3.sku = soi.seller_sku
				 			LEFT JOIN sc_real_product s4 ON  s4.id = s3.real_id AND s4.real_sku = s3.real_sku
				WHERE sao.order_id = soi.order_id GROUP BY soi.order_id	 
			 ) AS ORDER_PRODUCTS ,
		  (SELECT s2.name FROM sc_user s2 WHERE s2.login_id = s1.creator ) AS USER_NAME,
		  (SELECT s2.name FROM sc_ram_options s2 WHERE s2.code = s1.cause_code ) AS CAUSE_NAME,
		  (SELECT s2.name FROM sc_ram_options s2 WHERE s2.code = s1.policy_code ) AS POLICY_NAME,
		  ( SELECT srt.memo FROM sc_ram_track srt WHERE srt.ram_id = s1.ID ORDER BY id DESC LIMIT 0,1 )  AS TRACK_MEMO
		  FROM sc_ram_event s1
		  LEFT JOIN sc_order sao
		  ON s1.order_id = sao.order_id
		  WHERE 1=1
		  {@ and s1.status = '#status#'}
		  {@ and s1.order_id like '%#orderId#%'}
		  {@ and s1.code like '%#rmaId#%'}
		  order by CREATE_TIME desc
   </entry>
   
   <entry key="sql_ram_events_list_rel">
  		SELECT s1.* ,
		  srp.IMAGE_URL,
		  srp.REAL_SKU,
		  (SELECT s2.name FROM sc_ram_options s2 WHERE s2.code = s1.cause_code ) AS CAUSE_NAME,
		  (SELECT s2.name FROM sc_ram_options s2 WHERE s2.code = s1.policy_code ) AS POLICY_NAME
		  FROM sc_ram_event s1 , sc_amazon_order sao
		  LEFT JOIN sc_real_product_rel srpr
		  ON srpr.sku = sao.sku
		  and srpr.account_id = sao.account_id
		  LEFT JOIN sc_real_product srp
		  on srp.id = srpr.real_id
		  WHERE s1.order_id = sao.order_id
		  {@ and s1.order_id = '#orderId#'}
		  {@ and s1.id != '#id#'}
		  
   </entry>
   
   
   <entry key="sql_saleuser_saveReship">
  		update sc_order_item set rma_reship = '{@#rmaReship#}'
  		where order_id = '{@#orderId#}' and order_item_id = '{@#orderItemId#}'
   </entry>
   
   
   <entry key="sql_ram_event_insert">	
	INSERT INTO sc_ram_event 
		( 
		CODE, 
		ORDER_ID, 
		ORDER_NO, 
		CAUSE_CODE, 
		POLICY_CODE, 
		CREATOR, 
		CREATE_TIME, 
		STATUS, 
		MEMO, 
		CHARGER,
		PROPOSED_TIME
		)
		VALUES
		( 
		'{@#code#}', 
		'{@#orderId#}', 
		'{@#orderNo#}', 
		'{@#causeCode#}', 
		'{@#policyCode#}', 
		'{@#loginId#}', 
		NOW(), 
		'{@#status#}', 
		'{@#memo#}', 
		'{@#proposedTime#}', 
		''
		)
   </entry>
   
    <entry key="sql_ram_event_update_score">
		UPDATE sc_ram_event 
			SET
			SCORE = '{@#score#}',
			SCORE_MEMO = '{@#scoreMemo#}',
			SCORE_TIME = NOW(),
			score_commitor='{@#loginId#}'
			WHERE
			ID = '{@#id#}'
   </entry>
   
   <entry key="sql_ram_event_update">
		UPDATE sc_ram_event 
			SET
			CODE = '{@#code#}' , 
			ORDER_ID = '{@#orderId#}' , 
			ORDER_NO = '{@#orderNo#}' , 
			CAUSE_CODE = '{@#causeCode#}' , 
			POLICY_CODE = '{@#policyCode#}' ,
			MEMO = '{@#memo#}' , 
			{@ status = '#status#',}
			{@ is_receive = '#isReceive#',}
			{@ in_status = '#inStatus#',}
			{@ refund_Status = '#refundStatus#',}
			{@ resend_status = '#resendStatus#',}
			{@ refund_value = '#refundValue#',}
			{@ PROPOSED_TIME = '#proposedTime#',}
			END_TIME = now(),
			CHARGER = '{@#charger#}'
			WHERE
			ID = '{@#id#}'
   </entry>
   
   
    <entry key="sql_ram_event_confirmRefund">
   		UPDATE sc_ram_event 
			SET
			refund_status = '{@#refundStatus#}'
			,refund_value = '{@#refundValue#}'
			WHERE
			ID = '{@#id#}'
   </entry>
   
   
   <entry key="sql_ram_event_updateStatus">
   		UPDATE sc_ram_event 
			SET
			status = '{@#status#}'
			WHERE
			ID = '{@#id#}'
   </entry>
   
    <entry key="sql_ram_event_updateResend">
   		UPDATE sc_ram_event 
			SET
			RESEND_STATUS = '{@#resendStatus#}'
			WHERE
			ID = '{@#id#}'
   </entry>
   
   <entry key="sql_ram_event_updateRecieve">
   		UPDATE sc_ram_event 
			SET
			IS_RECEIVE = '{@#isReceive#}'
			WHERE
			ID = '{@#id#}'
   </entry>
   
   <entry key="sql_ram_event_completeRecieve">
   		UPDATE sc_ram_event 
			SET
			IN_STATUS = '1'
			WHERE
			ID = '{@#id#}'
   </entry>
   
   
   <entry key="sql_ram_track_insert">
	INSERT INTO sc_ram_track 
		(
		RAM_ID, 
		CREATE_TIME, 
		CREATOR, 
		MEMO
		)
		VALUES
		(
		'{@#id#}', 
		NOW(), 
		'{@#loginId#}', 
		'{@#trackMemo#}'
		)

   </entry>
   
   
   <entry key="sql_ram_track_list">
   	select s1.* ,
   		(select name from sc_user su where su.login_id = s1.creator ) as CREATOR_NAME
   	from sc_ram_track s1 where ram_id = '{@#id#}'
   	order by s1.create_time desc
   </entry>
   
   <entry key="sql_warehouse_rma_lists">
  		select s1.*,s2.NAME,s2.REAL_SKU,s2.IMAGE_URL,
  		  (select name from sc_warehouse where id = s1.warehouse_id ) as WAREHOUSE_NAME
  		 from  sc_warehouse_rma s1 , sc_real_product s2
  		 where 1=1
  		 and s1.real_product_id = s2.id
  		 {@ and s2.id = '#id#'}
  		 {@ and s1.ram_id = '#rmaId#'}
  		  order by create_time desc
   </entry>
   
   <entry key="sql_warehouse_rmaEdit_lists">
  		select s1.*,s2.NAME,s2.REAL_SKU,s2.IMAGE_URL,
  		  (select name from sc_warehouse where id = s1.warehouse_id ) as WAREHOUSE_NAME
  		 from  sc_warehouse_rma s1 , sc_real_product s2
  		 where 1=1
  		 and s1.real_product_id = s2.id
  		 {@ and s2.id = '#id#'}
  		  and s1.ram_id = '{@#rmaId#}'
  		  
  		  order by create_time desc
   </entry>
   
   <entry key="sql_warehouse_rma_insert">
   INSERT INTO sc_warehouse_rma 
	(
	TYPE,
	RAM_ID, 
	RAM_CODE,
	QUALITY, 
	QUANTITY, 
	REAL_PRODUCT_ID, 
	CREATOR, 
	CREATE_TIME, 
	MEMO, 
	WAREHOUSE_ID,
	IMAGE
	)
	VALUES
	(
	'in', 
	'{@#ramId#}', 
	'{@#rmaCode#}', 
	'{@#quality#}', 
	'{@#quantity#}', 
	'{@#realProductId#}', 
	'{@#loginId#}', 
	NOW(), 
	'{@#memo#}', 
	'{@#warehouseId#}', 
	'{@#image#}'
	)
   </entry>
   
   <entry key="sql_ram_delete_event">
  		delete from sc_ram_event where id = '{@#ramId#}'
   </entry>
   
   <entry key="sql_ram_delete_track">
  		delete from sc_ram_track where id = '{@#ramId#}'
   </entry>
</properties>