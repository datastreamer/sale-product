<?xml version="1.0" encoding="UTF-8"?>
<properties>
    <entry key="sql_order_user_insert">	 
    INSERT INTO sc_amazon_order_user 
	(EMAIL, 
	NAME, 
	PHONE, 
	STATUS, 
	ADDRESS_1, 
	ADDRESS_2, 
	ADDRESS_3, 
	CITY, 
	STATE, 
	POSTAL_CODE, 
	COUNTRY
	)
	VALUES
	('{@#buyer-email#}', 
	'{@#buyer-name#}', 
	'{@#buyer-phone-number#}',
	'', 
	'{@#ship-address-1#}', 
	'{@#ship-address-2#}', 
	'{@#ship-address-3#}', 
	'{@#ship-city#}', 
	'{@#ship-state#}', 
	'{@#ship-postal-code#}', 
	'{@#ship-country#}'
	)
    </entry>
    
    <entry key="sql_order_insert">
   INSERT INTO sc_amazon_order 
	(ORDER_ID, 
	ORDER_ITEM_ID, 
	PURCHASE_DATE, 
	PAYMENTS_DATE, 
	reporting_date,
	promise_date,
	days_past_promise,
	BUYER_EMAIL, 
	BUYER_NAME, 
	BUYER_PHONE_NUMBER, 
	SKU, 
	PRODUCT_NAME, 
	QUANTITY_PURCHASED, 
	quantity_shipped,
	quantity_to_ship,
	SHIP_SERVICE_LEVEL, 
	RECIPIENT_NAME, 
	SHIP_ADDRESS_1, 
	SHIP_ADDRESS_2, 
	SHIP_ADDRESS_3, 
	SHIP_CITY, 
	SHIP_STATE, 
	SHIP_POSTAL_CODE, 
	SHIP_COUNTRY,
	SALES_CHANNEL,
	ACCOUNT_ID,
	UPLOAD_ID
	)
	VALUES
	('{@#order-id#}', 
	'{@#order-item-id#}', 
	'{@#purchase-date#}', 
	'{@#payments-date#}',
	'{@#reporting-date#}',
	'{@#promise-date#}',
	'{@#days-past-promise#}',
	'{@#buyer-email#}', 
	'{@#buyer-name#}', 
	'{@#buyer-phone-number#}', 
	'{@#sku#}', 
	'{@#product-name#}', 
	'{@#quantity-purchased#}',
	'{@#quantity-shipped#}',
	'{@#quantity-to-ship#}',
	'{@#ship-service-level#}', 
	'{@#recipient-name#}', 
	'{@#ship-address-1#}', 
	'{@#ship-address-2#}', 
	'{@#ship-address-3#}', 
	'{@#ship-city#}', 
	'{@#ship-state#}', 
	'{@#ship-postal-code#}', 
	'{@#ship-country#}',
	'{@#sales-channel#}', 
	'{@#account_id#}', 
	'{@#upload_id#}'
	
	)
   </entry>
   
   <entry key="sql_order_update">
	   UPDATE sc_amazon_order 
		SET
		CURRENCY = '{@#currency#}' , 
		ITEM_PRICE = '{@#item-price#}' , 
		ITEM_TAX = '{@#item-tax#}' , 
		SHIPPING_PRICE = '{@#shipping-price#}' , 
		SHIPPING_TAX = '{@#shipping-tax#}'
		WHERE
		ORDER_ID = '{@#order-id#}' AND ORDER_ITEM_ID = '{@#order-item-id#}'
   </entry>

	<entry key="sql_order_upload_list">
		select * from (
		select sc_amazon_order_upload.*  , sc_user.name as USERNAME ,
		( select count(1) from sc_amazon_order where upload_id = sc_amazon_order_upload.id ) as TOTAL
		 from sc_amazon_order_upload , sc_user where 
		 sc_amazon_order_upload.creator = sc_user.login_id
		 {@ and sc_amazon_order_upload.account_id = '#accountId#'}
		) t
    </entry>
    
    <entry key="sql_order_list_nostatus">
		select sc_amazon_order.* ,
			sc_amazon_account_product.ASIN,
			sc_amazon_account_product.LOCAL_URL
		  from sc_amazon_order
		  left join sc_amazon_account_product 
		  on sc_amazon_account_product.sku = sc_amazon_order.sku
		  where  not exists (
		  	select 1 from sc_amazon_order_status where 
		  	sc_amazon_order_status.order_id = sc_amazon_order.order_id and
		   sc_amazon_order_status.order_item_id = sc_amazon_order.order_item_id
		  )
		  {@ and order_id = '#orderId#'}
		  {@ and buyer_name = '#userName#'}
		  {@ and buyer_email = '#email#'}
		  {@ and sku = '#sku#'}
    </entry>
    
   
   <entry key="sql_order_list">
		select sc_amazon_order.* ,sc_amazon_order_status.ID,
			sc_amazon_order_status.AUDIT_STATUS, 
			sc_amazon_order_status.AUDIT_MEMO, 
			sc_amazon_order_status.REAUDIT_STATUS, 
			sc_amazon_order_status.REAUDIT_MEMO, 
			sc_amazon_order_status.PICK_STATUS,
			sc_amazon_account_product.ASIN,
			sc_amazon_account_product.LOCAL_URL
		  from  sc_amazon_order_status ,sc_amazon_order
		  left join sc_amazon_account_product 
		  on sc_amazon_account_product.sku = sc_amazon_order.sku
		where sc_amazon_order_status.order_id = sc_amazon_order.order_id and
		   sc_amazon_order_status.order_item_id = sc_amazon_order.order_item_id 
		   {@ and sc_amazon_order_status.pick_status not in ( '9','10' ) and '#status#' = '#status#'}
		   {@ and sc_amazon_order_status.audit_status = '#status#'}
		   {@ and sc_amazon_order.order_id = '#orderId#'}
		   {@ and sc_amazon_order.buyer_name = '#userName#'}
		   {@ and sc_amazon_order.buyer_email = '#email#'}
		   {@ and sc_amazon_order.sku = '#sku#'}
		   {@ and sc_amazon_order_status.pick_status = '#pickStatus#'}
    </entry>
    
    <entry key="sql_order_doing_list">
		select sc_amazon_order.* ,sc_amazon_order_status.ID,
			sc_amazon_order_status.AUDIT_STATUS, 
			sc_amazon_order_status.AUDIT_MEMO, 
			sc_amazon_order_status.REAUDIT_STATUS, 
			sc_amazon_order_status.REAUDIT_MEMO, 
			sc_amazon_order_status.PICK_STATUS,
			sc_amazon_account_product.ASIN,
			sc_amazon_account_product.LOCAL_URL
		  from  sc_amazon_order_status ,sc_amazon_order
		  left join sc_amazon_account_product 
		  on sc_amazon_account_product.sku = sc_amazon_order.sku
		where sc_amazon_order_status.order_id = sc_amazon_order.order_id and
		   sc_amazon_order_status.order_item_id = sc_amazon_order.order_item_id 
		   {@ and sc_amazon_order_status.pick_status not in ( '9','10' ) and '#status#' = '#status#'}
		   {@ and sc_amazon_order_status.audit_status = '#status#'}
		   {@ and sc_amazon_order.order_id = '#orderId#'}
		   {@ and sc_amazon_order.buyer_name = '#userName#'}
		   {@ and sc_amazon_order.buyer_email = '#email#'}
		   {@ and sc_amazon_order.sku = '#sku#'}
		   {@ and sc_amazon_order_status.pick_status = '#pickStatus#'}
		   and ( sc_amazon_order.tn_status is null or sc_amazon_order.tn_status not in ('1') )
    </entry>
    
    <entry key="sql_order_done_list">
		select sc_amazon_order.* ,sc_amazon_order_status.ID,
			sc_amazon_order_status.AUDIT_STATUS, 
			sc_amazon_order_status.AUDIT_MEMO, 
			sc_amazon_order_status.REAUDIT_STATUS, 
			sc_amazon_order_status.REAUDIT_MEMO, 
			sc_amazon_order_status.PICK_STATUS,
			sc_amazon_account_product.ASIN,
			sc_amazon_account_product.LOCAL_URL
		  from  sc_amazon_order_status ,sc_amazon_order
		  left join sc_amazon_account_product 
		  on sc_amazon_account_product.sku = sc_amazon_order.sku
		where sc_amazon_order_status.order_id = sc_amazon_order.order_id and
		   sc_amazon_order_status.order_item_id = sc_amazon_order.order_item_id 
		   {@ and sc_amazon_order_status.pick_status not in ( '9','10' ) and '#status#' = '#status#'}
		   {@ and sc_amazon_order_status.audit_status = '#status#'}
		   {@ and sc_amazon_order.order_id = '#orderId#'}
		   {@ and sc_amazon_order.buyer_name = '#userName#'}
		   {@ and sc_amazon_order.buyer_email = '#email#'}
		   {@ and sc_amazon_order.sku = '#sku#'}
		   {@ and sc_amazon_order.service_status = '#serviceStatus#'}
		   and sc_amazon_order.tn_status in ('1')
		   {@ and ( sc_amazon_order.redo_status is null or sc_amazon_order.redo_status = '' ) and '#unRedoStatus#' = '#unRedoStatus#'}
		   {@ and sc_amazon_order.redo_status = '#redoStatus#'}
    </entry>
    
    <entry key="sql_order_list_picked">
    <![CDATA[
		select sc_amazon_order.* ,sc_amazon_order_status.ID,
			sc_amazon_order_status.AUDIT_STATUS, 
			sc_amazon_order_status.AUDIT_MEMO, 
			sc_amazon_order_status.REAUDIT_STATUS, 
			sc_amazon_order_status.REAUDIT_MEMO, 
			sc_amazon_order_status.PICK_STATUS,
			sc_amazon_account_product.ASIN,
			sc_amazon_account_product.LOCAL_URL
		  from  sc_amazon_order_status ,sc_amazon_order
		  left join sc_amazon_account_product 
		  on sc_amazon_account_product.sku = sc_amazon_order.sku
		where sc_amazon_order_status.order_id = sc_amazon_order.order_id and
		   sc_amazon_order_status.order_item_id = sc_amazon_order.order_item_id 
		  {@ and sc_amazon_order_status.pick_status not in ( '9','10' ) and '#status#' = '#status#'}
		  {@ and sc_amazon_order_status.audit_status = '#status#'}
		  {@ and sc_amazon_order.order_id = '#orderId#'}
		  {@ and sc_amazon_order.buyer_name = '#userName#'}
		  {@ and sc_amazon_order.buyer_email = '#email#'}
		  {@ and sc_amazon_order.sku = '#sku#'}
		  {@ and sc_amazon_order.track_number is not null and '#trackNumber#' = '#trackNumber#'}
		  {@ and sc_amazon_order.track_number is null and '#trackNumberNull#' = '#trackNumberNull#'}
		  {@ and sc_amazon_order_status.pick_status = '#pickStatus#'}
		  {@ and exists ( 
		  		select 1 from sc_amazon_picked_order where
		  		 picked_id = '#pickId#'
		  		 and sc_amazon_picked_order.order_id = sc_amazon_order.order_id
		  		 and sc_amazon_picked_order.order_item_id = sc_amazon_order.order_item_id
		  )}
		  
		 ]]>
    </entry>
    
    <entry key="sql_order_list_picked_print">
    <![CDATA[
		  SELECT t.SKU ,
		t.REAL_SKU,
		       t.IMAGE_URL,
		       t.POSITION,
		       t.BARCODE,
		       t.NAME,
		       t.ASIN,
		       t.LOCAL_URL,
		       SUM(t.QUANTITY_TO_SHIP) AS QUANTITY
           FROM (
    
		SELECT sc_amazon_order.SKU ,
		       sc_amazon_order.QUANTITY_TO_SHIP,
		       sc_real_product.REAL_SKU,
		       sc_real_product.IMAGE_URL,
		       sc_real_product.POSITION,
		       sc_real_product.BARCODE,
		       sc_real_product.NAME,
		       sc_amazon_account_product.ASIN,
		       sc_amazon_account_product.LOCAL_URL
		  FROM  sc_amazon_order_status ,sc_amazon_order
		  LEFT JOIN sc_amazon_account_product 
		  ON sc_amazon_account_product.sku = sc_amazon_order.sku
		  LEFT JOIN sc_real_product_rel
		  ON sc_amazon_order.sku = sc_real_product_rel.sku
		  LEFT JOIN sc_real_product
		  ON sc_real_product.real_sku = sc_real_product_rel.real_sku
		WHERE sc_amazon_order_status.order_id = sc_amazon_order.order_id AND
		   sc_amazon_order_status.order_item_id = sc_amazon_order.order_item_id 

		  
		   AND sc_amazon_order_status.pick_status = '9'
		   AND EXISTS ( 
		  		SELECT 1 FROM sc_amazon_picked_order WHERE
		  		 picked_id = '{@#pickId#}'
		  		 AND sc_amazon_picked_order.order_id = sc_amazon_order.order_id
		  		 AND sc_amazon_picked_order.order_item_id = sc_amazon_order.order_item_id
		  )
            ) t GROUP BY t.REAL_SKU
		 ]]>
    </entry>
    

    
    <entry key="sql_order_status_insert">
		INSERT INTO sc_amazon_order_status 
		( 
		ORDER_ID, 
		ORDER_ITEM_ID, 
		AUDIT_STATUS, 
		AUDIT_MEMO, 
		REAUDIT_STATUS, 
		REAUDIT_MEMO, 
		PICK_STATUS
		)
		VALUES
		( 
		{@'#ORDER_ID#'}, 
		{@'#ORDER_ITEM_ID#'}, 
		'{@#AUDIT_STATUS#}', 
		'{@#AUDIT_MEMO#}', 
		'{@#REAUDIT_STATUS#}', 
		'{@#REAUDIT_MEMO#}', 
		'{@#PICK_STATUS#}'
		)
    </entry>
    
     <entry key="sql_order_status_delete">
		DELETE FROM sc_amazon_order_status 
		WHERE
		order_id = {@'#ORDER_ID#'}
		and order_item_id = {@'#ORDER_ITEM_ID#'}
    </entry>
    
    <entry key="sql_order_track_insert">
		INSERT INTO sc_amazon_order_track 
		(
			ACTOR, 
			ACT_TIME, 
			MESSAGE, 
			STATUS, 
			ORDER_ID, 
			ORDER_ITEM_ID
		)
		VALUES
		( 
			'{@#ACTOR#}', 
			NOW(), 
			'{@#MESSAGE#}', 
			'{@#STATUS#}', 
			'{@#ORDER_ID#}', 
			'{@#ORDER_ITEM_ID#}'
		)
    </entry>
    
    <entry key="sql_order_picked_list">
    	SELECT * FROM (
			SELECT sc_amazon_picked.*  , sc_user.name AS USERNAME ,
		( SELECT COUNT(1) FROM sc_amazon_picked_order WHERE picked_id = sc_amazon_picked.id
	  		AND order_id IN (SELECT order_id FROM sc_amazon_order)	
	 	) AS TOTAL
	 FROM sc_amazon_picked , sc_user WHERE 
	 sc_amazon_picked.creator = sc_user.login_id
	 {@ and sc_amazon_picked.account_id = '#accountId#'}
	ORDER BY sc_amazon_picked.id DESC
	) t
    </entry>
    
    <entry key="sql_order_update_tracknumber">
		update sc_amazon_order set
		 order_id = '{@#orderId#}'
		 {@, track_number = '#TRACK_NUMBER#'}
		 {@, carrier_code = '#CARRIER_CODE#'}
		where order_id = '{@#orderId#}' and order_item_id = '{@#orderItemId#}'
    </entry>

	<entry key="sql_order_track_list">
		select sc_amazon_order_track.*,sc_user.name as USERNAME  from sc_amazon_order_track, sc_user where 
		 sc_amazon_order_track.actor = sc_user.login_id
		and order_id = '{@#orderId#}' and order_item_id = '{@#orderItemId#}'
    </entry>
    
    <entry key="sql_order_aftermarket_list">
		select sc_amazon_order_aftermarket.*,sc_user.name as USERNAME  from sc_amazon_order_aftermarket, sc_user where 
		 sc_amazon_order_aftermarket.creator = sc_user.login_id
		and order_id = '{@#orderId#}' and order_item_id = '{@#orderItemId#}'
    </entry>
    
    
    
    <entry key="sql_order_can_do_ship">
		select * from sc_amazon_order where account_id = '{@#accountId#}'
			AND (tn_status is null or tn_status = '') 
			AND track_number IS NOT NULL AND track_number !='' 
			AND carrier_code IS NOT NULL AND carrier_code !='' 

    </entry>
   
</properties>